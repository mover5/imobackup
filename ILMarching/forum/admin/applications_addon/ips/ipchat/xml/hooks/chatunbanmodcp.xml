<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>Unban Chat Users</hook_name>
      <hook_desc>Allows supermoderators to unban chat users from the ModCP</hook_desc>
      <hook_author>Invision Power Services, Inc.</hook_author>
      <hook_email>support@invisionpower.com</hook_email>
      <hook_website>http://invisionpower.com</hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:3:{s:21:"required_applications";a:0:{}s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>1.0</hook_version_human>
      <hook_version_long>10000</hook_version_long>
      <hook_extra_data/>
      <hook_key>chatunbanmodcp</hook_key>
      <hook_global_caches/>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>chatUnbanModcp.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>chatUnbanModcp</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:10:"skin_modcp";s:12:"skinFunction";s:11:"membersList";s:4:"type";s:2:"if";s:2:"id";s:11:"weAreSupmod";s:8:"position";s:10:"post.endif";}]]></hook_data>
      <hooks_source><![CDATA[<?php

class chatUnbanModcp
{
	/**
	 * Registry Object
	 *
	 * @var		object
	 */
	protected $registry;
	
	/**
	 * Chat hook lib
	 *
	 * @var		object
	 */
	protected $chatting;
	
	public function __construct()
	{
		/* Make registry objects */
		$this->registry	= ipsRegistry::instance();

		if( is_file( IPSLib::getAppDir('ipchat') . '/sources/hooks.php' ) )
		{
			$classToLoad = IPSLib::loadLibrary( IPSLib::getAppDir('ipchat') . '/sources/hooks.php', 'hooksApi', 'ipchat' );
			$this->chatting	 = new $classToLoad( $this->registry );
		}
	}
	
	public function getOutput()
	{
	}

	/**
	 * Replace output
	 *
	 * @param	string		Output
	 * @param	string		Hook key
	 * @return	string		Output parsed
	 */
	public function replaceOutput( $output, $key )
	{
		if( is_array($this->registry->output->getTemplate('modcp')->functionData['membersList']) AND count($this->registry->output->getTemplate('modcp')->functionData['membersList']) )
		{
			$tag	= '<!--hook.' . $key . '-->';
			$last	= 0;
		
			foreach( $this->registry->output->getTemplate('modcp')->functionData['membersList'] as $_idx => $instance )
			{
				if( is_array($instance['members']) AND count($instance['members']) )
				{
					foreach( $instance['members'] as $member )
					{
						$pos	= strpos( $output, $tag, $last );
						
						if( $pos )
						{
							$string	= $this->chatting->chatUnbanModcp( $member );
							$output	= substr_replace( $output, $string . $tag, $pos, strlen( $tag ) ); 
							$last	= $pos + strlen( $tag . $string );
						}
					}
				}
			}
		}
		
		return $output;
	}
}]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>
