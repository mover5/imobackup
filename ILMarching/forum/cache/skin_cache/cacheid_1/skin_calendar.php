<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 1               */
/* CACHE FILE: Generated: Tue, 28 Jan 2014 19:29:18 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_calendar_1 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['bbCodeEvent'] = array('timeNoEnd','hasEnds','hasEndTimeAndStart','singleDayTime','hasEndTimeNoEnds');
$this->_funcHooks['boardIndexBirthdays'] = array('age','upcomingevents','calendarEventsInner','moreBirthdays','calendarEventsOuter');
$this->_funcHooks['boardIndexCalEvents'] = array('hasCalendar','upcomingevents','calendarEventsInner','calendarEventsOuter');
$this->_funcHooks['cal_date_cell'] = array('isUrl','isUrl2','datecellqueued');
$this->_funcHooks['cal_date_cell_today'] = array('isUrl','isUrl2','todayqueued');
$this->_funcHooks['cal_week_dayentry'] = array('weekdayentryqueued');
$this->_funcHooks['calendar_likeSummaryContents'] = array('count','ilike','likeexp','likeOnlyMembers');
$this->_funcHooks['calendarBirthdayList'] = array('hasAge','members','showmembers');
$this->_funcHooks['calendarEventForm'] = array('startIsAm','startIsPm','usestandardstart','endIsAm','endIsPm','usestandardend','recurDaily','recurMonthly','recurYearly','isAllDay','hasEndDate','isRecurring','rsvpset','canaskrsvp','isPublic','isPrivate','allGroups','acpaccess','hassmilies','upload_form_check');
$this->_funcHooks['calendarEventsList'] = array('disablelightbox','canstart','hasevents','showBirthdays');
$this->_funcHooks['calendarJump'] = array('calendars','gotcalendars');
$this->_funcHooks['calendarMainContent'] = array('days','canstart');
$this->_funcHooks['calendarWeekView'] = array('canstartagain');
$this->_funcHooks['calEventFollowedWrapper'] = array('results','hasResults');
$this->_funcHooks['calEventSearchResult'] = array('showCalendarContent','isFollowed','forumsDigests','singleDayTime','hasEnds','hasEndTimeAndStart','singleDayTime','hasEndTimeNoEnds');
$this->_funcHooks['event_likeSummaryContents'] = array('count','ilike','ilikeexp','likeOnlyMembers');
$this->_funcHooks['eventAttendee'] = array('deletersvp');
$this->_funcHooks['followedContentCalendars'] = array('forumsDigests','followedResults');
$this->_funcHooks['mini_cal_date_cell'] = array('isUrl');
$this->_funcHooks['mini_cal_date_cell_today'] = array('isUrl');
$this->_funcHooks['miniCalendarWrapper'] = array('minidays');
$this->_funcHooks['modEventsWrapper'] = array('event','hasevents');
$this->_funcHooks['showEvent'] = array('attendees','attendeesagain','disablelightbox','canrate','canratelink','rate1','rate1end','rate2','rate2end','rate3','rate3end','rate4','rate4end','rate5','rate5end','hasRates','jsHasRates','ratejs','timesNotRecurring','hasEnds','hasEndTime','hasEndTimeEnds','hasrsvp1','hasrsvp2','eventnotapproved','eventmember','onlineoffline','reportpost','canedit','apporunapp','canapprove','notalreadyrsvp','canrsvp','showrsvpdiv','rsvpamount','hasattendees','extrarsvp','hasrsvp3','sharelinks');
$this->_funcHooks['showEventSimple'] = array('attendees','eventnotapproved','canrate','rate1link','rate1','rate1end','rate2','rate2end','rate3','rate3end','rate4','rate4end','rate5','rate5end','hasRates','jsHasRates','ratejs','hasattendees','rsvp','canedit','apporunapp','canapprove');


}

/* -- bbCodeEvent --*/
function bbCodeEvent($event=array(), $type='', $ends='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['bbCodeEvent'] ) )
{
$count_9d2c4a6233c711353aa8df4a9626a07a = is_array($this->functionData['bbCodeEvent']) ? count($this->functionData['bbCodeEvent']) : 0;
$this->functionData['bbCodeEvent'][$count_9d2c4a6233c711353aa8df4a9626a07a]['event'] = $event;
$this->functionData['bbCodeEvent'][$count_9d2c4a6233c711353aa8df4a9626a07a]['type'] = $type;
$this->functionData['bbCodeEvent'][$count_9d2c4a6233c711353aa8df4a9626a07a]['ends'] = $ends;
}
$IPBHTML .= "<div class='_sharedMediaBbcode'>
	<div class='bbcode_mediaWrap clearfix'>
		<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\"><img src='{$this->settings['img_url']}/sharedmedia/events.png' alt='{$this->lang->words['event_img_alt']}' class='sharedmedia_screenshot' /></a>
		<div class='details'>
			<h5><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\">" . IPSText::truncate( $event['event_title'], 60 ) . "</a></h5>
			<div><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$event['cal_id']}", "public",'' ), "{$event['cal_title_seo']}", "cal_calendar" ) . "\">{$this->lang->words['event_calendar']} {$event['cal_title']}</a></div>
			<div>{$event['_start_date']} 
				" . ((!$ends) ? ("{$event['_event_time']}") : ("")) . " 
				" . (($ends) ? ("{$ends} ") : ("")) . " 
				" . (($ends AND $event['_event_time']) ? ("{$event['_event_time']} " . (($event['_event_etime']) ? ("- {$event['_event_etime']}") : ("")) . "") : ("")) . "
				" . (($event['_event_etime'] AND !$ends) ? ("- {$event['_event_etime']}") : ("")) . "
				({$type})</div>
		</div>
	</div>
</div>
<br />";
return $IPBHTML;
}

/* -- boardIndexBirthdays --*/
function boardIndexBirthdays($birthdays, $data=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['boardIndexBirthdays'] ) )
{
$count_96cee08e74a4159829335832d76789f6 = is_array($this->functionData['boardIndexBirthdays']) ? count($this->functionData['boardIndexBirthdays']) : 0;
$this->functionData['boardIndexBirthdays'][$count_96cee08e74a4159829335832d76789f6]['birthdays'] = $birthdays;
$this->functionData['boardIndexBirthdays'][$count_96cee08e74a4159829335832d76789f6]['data'] = $data;
}
$IPBHTML .= "" . (($birthdays OR !$this->settings['autohide_bday']) ? ("<div class='ipsSideBlock clearfix' id='hook_birthdays'>
		<h3>{$this->lang->words['birthdays_title']}</h3>
		<div class='_sbcollapsable'>
			" . ((count( $birthdays )) ? ("
				<ul class='ipsList_withminiphoto'>
					".$this->__f__2ab8c317833a315ae8a63a0f1b7935f3($birthdays,$data)."				</ul>
			") : ("
				<span class='desc'>{$this->lang->words['no_birth_users']}</span>
			")) . "
			" . (($data['count'] > count($birthdays)) ? ("
				<div class='desc right'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['id']}&amp;do=showday&amp;y={$data['year']}&amp;m={$data['month']}&amp;d={$data['day']}", "public",'' ), "{$data['title']}", "cal_day" ) . "\">{$this->lang->words['birthdaysviewmorelink']}</a></div>
			") : ("")) . "
		</div>
	</div>") : ("")) . "";
return $IPBHTML;
}


function __f__2ab8c317833a315ae8a63a0f1b7935f3($birthdays, $data=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $birthdays as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<li class='clearfix'>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$r['member_id']}", "public",'' ), "{$r['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$r['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$r['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_mini' /></a>
							<p class='list_content'>
								" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($r) : '' ) . "" . (($r['_pyear']) ? (" (<strong>{$r['_pyear']}</strong>)") : ("")) . "
							</p>
						</li>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- boardIndexCalEvents --*/
function boardIndexCalEvents($events) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['boardIndexCalEvents'] ) )
{
$count_7d82dd17ae8d5737e54a469e1283cb87 = is_array($this->functionData['boardIndexCalEvents']) ? count($this->functionData['boardIndexCalEvents']) : 0;
$this->functionData['boardIndexCalEvents'][$count_7d82dd17ae8d5737e54a469e1283cb87]['events'] = $events;
}
$IPBHTML .= "" . (($events OR !$this->settings['autohide_calendar']) ? ("<div class='ipsSideBlock clearfix'>
		<h3>{$this->lang->words['upcoming_events']}</h3>
		<div class='_sbcollapsable'>
			" . ((is_array( $events )) ? ("
				<ul itemscope itemtype=\"http://schema.org/Event\" class='ipsList_withminiphoto'>
					".$this->__f__de85b7899705c3290f783457cea381f7($events)."				</ul>
			") : ("
				<span class='desc'>{$events}</span>
			")) . "
		</div>
	</div>") : ("")) . "";
return $IPBHTML;
}


function __f__de85b7899705c3290f783457cea381f7($events)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $events as $event )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<li class='clearfix'>
							" . ((is_array($event['calendar'])) ? ("
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$event['calendar']['cal_id']}", "public",'' ), "{$event['calendar']['cal_title_seo']}", "cal_calendar" ) . "\"><span class='ipsBadge ipsBadge_lightgrey'>{$event['calendar']['cal_title']}</span></a>
							") : ("")) . "
							<a itemprop=\"url\" href='{$event['url']}' title='{$event['date']}'><span itemprop=\"name\">{$event['title']}</span></a>
							<br /> <span class='date ipsType_small desc'>{$this->lang->words['next_occurrence']} {$event['date']}</span>
							<meta itemprop=\"startDate\" content=\"{$event['isoDate']}\" />
						</li>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- cal_blank_cell --*/
function cal_blank_cell() {
$IPBHTML = "";
$IPBHTML .= "<td class=\"blank\"><!-- no content --></td>";
return $IPBHTML;
}

/* -- cal_date_cell --*/
function cal_date_cell($day=array(),$events="",$cal_date_queued="",$queued=0, $js_id) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['cal_date_cell'] ) )
{
$count_b6f651830205fdb35725b02a4cd65a60 = is_array($this->functionData['cal_date_cell']) ? count($this->functionData['cal_date_cell']) : 0;
$this->functionData['cal_date_cell'][$count_b6f651830205fdb35725b02a4cd65a60]['day'] = $day;
$this->functionData['cal_date_cell'][$count_b6f651830205fdb35725b02a4cd65a60]['events'] = $events;
$this->functionData['cal_date_cell'][$count_b6f651830205fdb35725b02a4cd65a60]['cal_date_queued'] = $cal_date_queued;
$this->functionData['cal_date_cell'][$count_b6f651830205fdb35725b02a4cd65a60]['queued'] = $queued;
$this->functionData['cal_date_cell'][$count_b6f651830205fdb35725b02a4cd65a60]['js_id'] = $js_id;
}
$IPBHTML .= "<!--Day-->
" . (($queued != 0) ? ("<td id='{$js_id}' class=\"moderated normal\" data-furl=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "\">
	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . "</strong>
	<a href=\"{$cal_date_queued}\">" . $this->registry->getClass('output')->getReplacement("t_queued") . "</a>") : ("<td id='{$js_id}' class='normal' data-furl=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "\">
	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . "</strong>")) . "
	{$events}
</td>";
return $IPBHTML;
}

/* -- cal_date_cell_today --*/
function cal_date_cell_today($day=array(),$events="",$cal_date_queued="",$queued=0, $js_id) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['cal_date_cell_today'] ) )
{
$count_59fad18c600ab2969ad3cb2474f574c9 = is_array($this->functionData['cal_date_cell_today']) ? count($this->functionData['cal_date_cell_today']) : 0;
$this->functionData['cal_date_cell_today'][$count_59fad18c600ab2969ad3cb2474f574c9]['day'] = $day;
$this->functionData['cal_date_cell_today'][$count_59fad18c600ab2969ad3cb2474f574c9]['events'] = $events;
$this->functionData['cal_date_cell_today'][$count_59fad18c600ab2969ad3cb2474f574c9]['cal_date_queued'] = $cal_date_queued;
$this->functionData['cal_date_cell_today'][$count_59fad18c600ab2969ad3cb2474f574c9]['queued'] = $queued;
$this->functionData['cal_date_cell_today'][$count_59fad18c600ab2969ad3cb2474f574c9]['js_id'] = $js_id;
}
$IPBHTML .= "<!--Day-->
" . (($queued != 0) ? ("<td id='{$js_id}' class=\"today moderated\" data-furl=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "\">
 	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . ": {$this->lang->words['today_title']}</strong> 
 	<a href=\"{$cal_date_queued}\">" . $this->registry->getClass('output')->getReplacement("t_queued") . "</a>") : ("<td id='{$js_id}' class=\"today\" data-furl=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "\">
	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . ": {$this->lang->words['today_title']}</strong>")) . "
	{$events}
</td>";
return $IPBHTML;
}

/* -- cal_day_bit --*/
function cal_day_bit($day="", $id='') {
$IPBHTML = "";
$IPBHTML .= "<td id='{$id}'><strong>{$day}</strong></td>";
return $IPBHTML;
}

/* -- cal_events_wrap --*/
function cal_events_wrap($event, $type='month') {
$IPBHTML = "";
$IPBHTML .= "<li itemscope itemtype=\"http://schema.org/Event\" class='cal vevent'>
	<a class='summary url' itemprop=\"url\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\" title='{$this->lang->words['view_event']}'><span itemprop=\"name\">{$event['event_title']}</span></a>
	<abbr class='dtstart hide' title=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">{$event['_start_date']} {$event['_event_time']}</abbr>
	<meta itemprop=\"startDate\" content=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">
</li>";
return $IPBHTML;
}

/* -- cal_events_wrap_manual --*/
function cal_events_wrap_manual($urlBits,$text="") {
$IPBHTML = "";
$IPBHTML .= "<li itemscope itemtype=\"http://schema.org/Event\" class='cal'>
	<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;{$urlBits['url']}", "public",'' ), "{$urlBits['title']}", "{$urlBits['template']}" ) . "\" title='{$this->lang->words['view_event']}'>{$text}</a>
</li>";
return $IPBHTML;
}

/* -- cal_events_wrap_range --*/
function cal_events_wrap_range($event, $type='month') {
$IPBHTML = "";
$IPBHTML .= "<li itemscope itemtype=\"http://schema.org/Event\" class='cal vevent'>
	<a class='summary url' itemprop=\"url\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\" title='{$this->lang->words['view_event']}'><span itemprop=\"name\">{$event['event_title']}</span></a>
	<abbr class='dtstart hide' title=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">{$event['_start_date']} {$event['_event_time']}</abbr>
	<meta itemprop=\"startDate\" content=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">
</li>";
return $IPBHTML;
}

/* -- cal_events_wrap_recurring --*/
function cal_events_wrap_recurring($event, $type='month') {
$IPBHTML = "";
$IPBHTML .= "<li itemscope itemtype=\"http://schema.org/Event\" class='cal vevent'>
	<a class='summary url' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\" title=\"{$this->lang->words['tbt_recur']}\"><span itemprop=\"name\">{$event['event_title']}</span></a>
	<abbr class='dtstart hide' title=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">{$event['_start_date']} {$event['_event_time']}</abbr>
	<meta itemprop=\"startDate\" content=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">
</li>";
return $IPBHTML;
}

/* -- cal_new_row --*/
function cal_new_row($week, $calendar) {
$IPBHTML = "";

$this->row_class = ( $this->row_class == 'row1' ) ? 'row2' : 'row1';
$IPBHTML .= "</tr>
<!-- NEW ROW--><tr class='{$this->row_class}' data-week=\"{$week}\">";
return $IPBHTML;
}

/* -- cal_week_dayentry --*/
function cal_week_dayentry($wday="",$date="",$month="",$mid="",$year="",$events="",$queued=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['cal_week_dayentry'] ) )
{
$count_20de3a6d1fa8309d9132e30f4ea83e2f = is_array($this->functionData['cal_week_dayentry']) ? count($this->functionData['cal_week_dayentry']) : 0;
$this->functionData['cal_week_dayentry'][$count_20de3a6d1fa8309d9132e30f4ea83e2f]['wday'] = $wday;
$this->functionData['cal_week_dayentry'][$count_20de3a6d1fa8309d9132e30f4ea83e2f]['date'] = $date;
$this->functionData['cal_week_dayentry'][$count_20de3a6d1fa8309d9132e30f4ea83e2f]['month'] = $month;
$this->functionData['cal_week_dayentry'][$count_20de3a6d1fa8309d9132e30f4ea83e2f]['mid'] = $mid;
$this->functionData['cal_week_dayentry'][$count_20de3a6d1fa8309d9132e30f4ea83e2f]['year'] = $year;
$this->functionData['cal_week_dayentry'][$count_20de3a6d1fa8309d9132e30f4ea83e2f]['events'] = $events;
$this->functionData['cal_week_dayentry'][$count_20de3a6d1fa8309d9132e30f4ea83e2f]['queued'] = $queued;
}

$this->week_view = ( $this->week_view == 'row1' ) ? 'row2' : 'row1';
$IPBHTML .= " 
<tr class='day {$this->week_view} " . (($queued != 0) ? ("{$this->lang->words['moderated']}") : ("")) . "'>
	<td class='col_cal_date'>
		{$date}<br />
		<span class='desc'>{$wday}</span>
	</td>
	<td class='col_cal_data normal' id='day-{$year}-{$mid}-{$date}'>
		<ul>
			{$events}
		</ul>
	</td>
</tr>";
return $IPBHTML;
}

/* -- cal_week_events_wrap --*/
function cal_week_events_wrap($linkdata,$text="") {
$IPBHTML = "";
$IPBHTML .= "<li class='cal vevent'>
	<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$linkdata['cal_id']}&amp;do=showday&amp;y={$linkdata['y']}&amp;m={$linkdata['m']}&amp;d={$linkdata['d']}", "public",'' ), "{$linkdata['seotitle']}", "cal_day" ) . "\" title='{$this->lang->words['view_event']}'>{$text}</a>
</li>";
return $IPBHTML;
}

/* -- cal_week_monthbar --*/
function cal_week_monthbar($month="",$year="") {
$IPBHTML = "";
$IPBHTML .= "<tr class='header'>
	<th class='month_bar' colspan='2'>
		{$month} {$year}
	</th>
</tr>";
return $IPBHTML;
}

/* -- calendar_likeSummary --*/
function calendar_likeSummary($data, $relId, $opts) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("like", "0" ) . "
<div class='__like right' data-app=\"{$data['app']}\" data-area=\"{$data['area']}\" data-relid=\"{$relId}\" data-isfave=\"{$data['iLike']}\">
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'calendar_likeSummaryContents' ) ? $this->registry->getClass('output')->getTemplate('calendar')->calendar_likeSummaryContents($data, $relId, $opts) : '' ) . "
</div>
<script type=\"text/javascript\">
	var FAVE_TEMPLATE = new Template( \"<h3>" . sprintf( $this->lang->words['unset_fave_title'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "</h3><div class='ipsPad'><span class='desc'>" . sprintf( $this->lang->words['unset_fave_words'], $this->lang->words['like_un' . $data['vernacular'] ]) . "</span><br /><p class='ipsForm_center'><input type='button' value='" . sprintf( $this->lang->words['unset_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "' class='input_submit _funset' /></p></div>\");
</script>";
return $IPBHTML;
}

/* -- calendar_likeSummaryContents --*/
function calendar_likeSummaryContents($data, $relId, $opts=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendar_likeSummaryContents'] ) )
{
$count_43b35a486e33acc44fcb33e95af7fa95 = is_array($this->functionData['calendar_likeSummaryContents']) ? count($this->functionData['calendar_likeSummaryContents']) : 0;
$this->functionData['calendar_likeSummaryContents'][$count_43b35a486e33acc44fcb33e95af7fa95]['data'] = $data;
$this->functionData['calendar_likeSummaryContents'][$count_43b35a486e33acc44fcb33e95af7fa95]['relId'] = $relId;
$this->functionData['calendar_likeSummaryContents'][$count_43b35a486e33acc44fcb33e95af7fa95]['opts'] = $opts;
}
$IPBHTML .= "<span class='ipsButton_extra right " . (($data['totalCount']) ? ("_fmore clickable") : ("")) . "' title='" . sprintf( $this->lang->words['like_totalcount_' . $data['vernacular'] ], $data['totalCount'] ) . "' data-tooltip=\"" . sprintf( $this->lang->words['like_totalcount_' . $data['vernacular'] ], $data['totalCount'] ) . "\"><img src='{$this->settings['img_url']}/icon_users.png' /> <strong>{$data['totalCount']}</strong></span>
" . (($this->memberData['member_id']) ? ("<a href='#' title=\"" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['fave_tt_on'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['fave_tt_off'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "\" class='ftoggle ipsButton_secondary'>" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['unset_fave_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['set_fave_button'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "</a>") : ("")) . "";
return $IPBHTML;
}

/* -- calendar_rss_range --*/
function calendar_rss_range($event) {
$IPBHTML = "";
$IPBHTML .= "<p>{$event['event_content']}{$event['event_attach_content']}</p>
<br />
<p>{$this->lang->words['c_ranged']}
<br />{$this->lang->words['c_fromcolon']} {$event['_start_date']}
<br />{$this->lang->words['c_tocolon']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($event['_end_time'],"DATE", 0)) . "</p>";
return $IPBHTML;
}

/* -- calendar_rss_recurring --*/
function calendar_rss_recurring($event) {
$IPBHTML = "";
$IPBHTML .= "<p>{$event['event_content']}{$event['event_attach_content']}</p>
<br />
<p>{$this->lang->words['c_recurring']}
<br />{$this->lang->words['c_fromcolon']} {$event['_start_date']}
<br />{$this->lang->words['c_tocolon']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($event['_end_time'],"DATE", 0)) . "</p>";
return $IPBHTML;
}

/* -- calendar_rss_single --*/
function calendar_rss_single($event) {
$IPBHTML = "";
$IPBHTML .= "<p>{$event['event_content']}{$event['event_attach_content']}</p>
<br />
<p>{$this->lang->words['c_singleday']} {$event['_start_date']}</p>";
return $IPBHTML;
}

/* -- calendarBirthdayList --*/
function calendarBirthdayList($rows) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarBirthdayList'] ) )
{
$count_710e3ee69f05a0e1ccf488933bb70f1c = is_array($this->functionData['calendarBirthdayList']) ? count($this->functionData['calendarBirthdayList']) : 0;
$this->functionData['calendarBirthdayList'][$count_710e3ee69f05a0e1ccf488933bb70f1c]['rows'] = $rows;
}
$IPBHTML .= "<h2 class='ipsType_subtitle'>{$this->lang->words['celebrating_bday']}</h2>
<br />
" . ((is_array( $rows ) and count( $rows )) ? ("
	".$this->__f__ab11d0c53d1620057275c93a4983d663($rows)."") : ("
	<br />
	<span class='desc lighter'>
		{$this->lang->words['no_birthdays']}
	</span>
	<br /><br />
")) . "";
return $IPBHTML;
}


function __f__ab11d0c53d1620057275c93a4983d663($rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $member )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<img src='{$member['pp_mini_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' /> (" . (($member['age']) ? ("{$member['age']}") : ("??")) . ") " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "
		<br />
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calendarEventForm --*/
function calendarEventForm($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarEventForm'] ) )
{
$count_ea527ff89478433745a6aae071ce765a = is_array($this->functionData['calendarEventForm']) ? count($this->functionData['calendarEventForm']) : 0;
$this->functionData['calendarEventForm'][$count_ea527ff89478433745a6aae071ce765a]['data'] = $data;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
<script type='text/javascript'>
	ipb.calendar.inSection	= 'form';
	ipb.calendar.startYear	= parseInt('{$this->settings['start_year']}');
	ipb.calendar.yearLimit	= parseInt('{$this->settings['year_limit']}');
</script>
<div class='post_form'>
<form id='postingform' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&amp;section=post&amp;do={$data['code']}&amp;cal_id={$data['calendar']['cal_id']}", "public",'' ), "", "" ) . "\" method=\"post\">
	<input type=\"hidden\" name=\"event_id\" value=\"{$data['event']['event_id']}\" />
	<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
	<input type=\"hidden\" name=\"post_key\" value=\"{$data['event']['event_post_key']}\" />
	
	<h2 class='maintitle'>{$this->lang->words['post_new_event']}</h2>
	<div class='generic_bar'></div>
	
	<fieldset>
		<h3 class='bar'>{$this->lang->words['event_details']}</h3>
		<ul>
			<li class='field'>
				<label for='event_title'>{$this->lang->words['calendar_title']}</label>
				<input type='text' id='event_title' class='input_text' name='event_title' value=\"{$data['event']['event_title']}\" size='50' maxlength='50' />
			</li>
			
			<li class='field'>
				<label for='start_date'>{$this->lang->words['fv_single']}</label>
				<input type='text' size='15' name='start_date' id='start_date' class='input_text date' value='{$data['dates']['ndate']}' />
				<img src='{$this->settings['img_url']}/date.png' alt='' id='start_date_icon' style='cursor: pointer' /> 
				<span class='time_setting'>
					&nbsp;&nbsp;
					<input class='input_text' type='text' size='5' id='start_time' name='start_time' value='{$data['dates']['nh']}:{$data['dates']['nmi']}' />
					
					" . (($this->settings['cal_time_format'] == 'standard') ? ("<select name='start_time_ampm' id='start_time_ampm' class='input_select'>
							<option value='AM'" . (($data['dates']['nap'] == 'AM') ? (" selected='selected'") : ("")) . ">{$this->lang->words['time_am']}</option>
							<option value='PM'" . (($data['dates']['nap'] == 'PM') ? (" selected='selected'") : ("")) . ">{$this->lang->words['time_pm']}</option>
						</select>") : ("")) . "
					<select name='event_timezone' class='event_timezone'>
						{$data['_time_zones']}
					</select>
				</span>
			</li>
			<li class='field' id='end_date_fields'>
				<label for='end_date'>{$this->lang->words['fv_range_ends']}</label>
				<input type='text' size='15' name='end_date' id='end_date' class='input_text date' value='{$data['dates']['edate']}' />
				<img src='{$this->settings['img_url']}/date.png' alt='' id='end_date_icon' style='cursor: pointer' /> 
				<span class='time_setting'>
					&nbsp;&nbsp;
					<input class='input_text' type='text' size='5' id='end_time' name='end_time' value='{$data['dates']['fh']}:{$data['dates']['fmi']}' />
					
					" . (($this->settings['cal_time_format'] == 'standard') ? ("<select name='end_time_ampm' id='end_time_ampm' class='input_select'>
							<option value='AM'" . (($data['dates']['fap'] == 'AM') ? (" selected='selected'") : ("")) . ">{$this->lang->words['time_am']}</option>
							<option value='PM'" . (($data['dates']['fap'] == 'PM') ? (" selected='selected'") : ("")) . ">{$this->lang->words['time_pm']}</option>
						</select>") : ("")) . "
				</span>
			</li>
			
			<li class='field' id='recur_fields'>
				<label for='recur_unit'>{$this->lang->words['fv_recur']}</label>
				{$this->lang->words['fv_recur_every']} 
				<select class='input_select' name=\"recur_unit\" id='recur_unit'>
					<option value='1'" . (($data['event']['event_recurring'] == 1) ? (" selected='selected'") : ("")) . ">{$this->lang->words['fv_days']}</option>
					<option value='2'" . (($data['event']['event_recurring'] == 2) ? (" selected='selected'") : ("")) . ">{$this->lang->words['fv_months']}</option>
					<option value='3'" . (($data['event']['event_recurring'] == 3) ? (" selected='selected'") : ("")) . ">{$this->lang->words['fv_years']}</option>
				</select>
			</li>
			<li class='field checkbox'>
				<input class='input_check' type='checkbox' id='all_day' name='all_day'" . (($data['dates']['allday']) ? (" checked='checked'") : ("")) . " value='1' /> 
				<label for='set_times'>{$this->lang->words['form_set_times']}</label>
				
				<input class='input_check event_options' type='checkbox' id='set_enddate' name='set_enddate'" . (($data['dates']['enddate']) ? (" checked='checked'") : ("")) . " value='1' /> 
				<label for='set_enddate'>{$this->lang->words['form_set_enddate']}</label>
				
				<input class='input_check event_options' type='checkbox' id='set_recurfields' name='set_recurfields'" . (($data['event']['event_recurring']) ? (" checked='checked'") : ("")) . " value='1' /> 
				<label for='set_recurfields'>{$this->lang->words['form_event_repeats']}</label>
			</li>
		</ul>
		<h3 class='bar'>{$this->lang->words['event_options']}</h3>
		<ul>
			<li class='field'>
				<label for='event_calendar_id'>{$this->lang->words['form_whichcal']}</label>
				<select name='event_calendar_id' id='event_calendar_id'>{$data['jump']}</select>
			</li>
			" . (($data['_can_set_rsvp']) ? ("<li class='field checkbox type_setting'>
					<input type='checkbox' id='event_rsvp' name='event_rsvp' value='1' class='input_check'" . (($data['event']['event_rsvp']) ? (" checked='checked'") : ("")) . " />
					<label for='event_rsvp'>{$this->lang->words['request_rsvp']}</label>
				</li>") : ("")) . "
			<li class='field'>
				<label for='e_type'>{$this->lang->words['calendar_event_type']}</label>
				<select name=\"e_type\" id='e_type'>
					<option value=\"public\"" . ((!$data['event']['event_private']) ? (" selected='selected'") : ("")) . ">{$this->lang->words['calendar_type_public']}</option>
					<option value=\"private\"" . (($data['event']['event_private']) ? (" selected='selected'") : ("")) . ">{$this->lang->words['calendar_type_private']}</option>
				</select>
			</li>
			" . (($this->memberData['g_access_cp']) ? ("<li class='field type_setting'>
					<label for='e_groups'>{$this->lang->words['calendar_group_filter']}</label>
					<select name=\"e_groups[]\" id='e_groups' size=\"5\" multiple='multiple'>{$data['_groupSelect']}</select>
				</li>
				<li class='field checkbox type_setting'>
					<input type='checkbox' id='all_groups' value='1' class='input_check'" . (($data['event']['event_perms'] == '*') ? (" checked='checked'") : ("")) . " />
					<label for='all_groups'>{$this->lang->words['all_groups']}</label>
				</li>") : ("")) . "
		</ul>
		<h3 class='bar'>{$this->lang->words['event']}</h3>
		<ul>
			<li>{$data['editor']}</li>
			<li class='field checkbox'>
				<input type=\"checkbox\" name=\"enableemo\" class=\"input_check\" value=\"1\" " . (($data['event']['event_smilies']) ? ("checked='checked'") : ("")) . " />
				<label for='enableemo'>{$this->lang->words['enable_emo']}</label>
			</li>
		</ul>
	</fieldset>
	" . (($data['uploadForm']) ? ("
	<fieldset class='attachments'>
		{$data['uploadForm']}
	</fieldset>
	") : ("")) . "
	<fieldset class='submit'>
		<input class='input_submit' type=\"submit\" value=\"{$data['button']}\" tabindex=\"50\" /> {$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_calendar" ) . "' title='{$this->lang->words['cancel']}' class='cancel'>{$this->lang->words['cancel']}</a>
	</fieldset>
</form>
</div>";
return $IPBHTML;
}

/* -- calendarEventsList --*/
function calendarEventsList($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarEventsList'] ) )
{
$count_b05b4bfc3946a3781b63305a735ccc6b = is_array($this->functionData['calendarEventsList']) ? count($this->functionData['calendarEventsList']) : 0;
$this->functionData['calendarEventsList'][$count_b05b4bfc3946a3781b63305a735ccc6b]['data'] = $data;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) : '' ) . "
" . ((!$this->settings['disable_lightbox']) ? ("
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
<script type='text/javascript'>
	ipb.vars['month_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=view&cal_id={$data['calendar']['cal_id']}", "public",'' ), "", "" ) . "\";
	ipb.vars['week_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=view&cal_id={$data['calendar']['cal_id']}&do=showweek", "public",'' ), "", "" ) . "\";
	ipb.vars['day_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=view&cal_id={$data['calendar']['cal_id']}&do=showday", "public",'' ), "", "" ) . "\";
	ipb.vars['add_event_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=post&cal_id={$data['calendar']['cal_id']}&do=newevent", "public",'' ), "", "" ) . "\";
	
	ipb.calendar.currentView = \"day\";
	ipb.calendar.weekToJump = parseInt( " . gmmktime( 12,0,0, $this->request['m'], $this->request['d'], $this->request['y']) . " );
	ipb.calendar.currentMonth = parseInt( {$this->request['m']} );
	ipb.calendar.currentYear = parseInt( {$this->request['y']} );
</script>

<h1 class='ipsType_pagetitle calendar_title'>{$this->lang->words['events_for_day']} {$data['start_date']}</h1>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'calendarJump' ) ? $this->registry->getClass('output')->getTemplate('calendar')->calendarJump($data['calendars'], $data['calendar'], $data['chosen_date']) : '' ) . "
<br /><br />
<div class='topic_controls clearfix'>
	<ul class='pagination ipsList_inline left'>
		<li class='back'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showday&amp;y={$data['prev_day'][0]}&amp;m={$data['prev_day'][1]}&amp;d={$data['prev_day'][2]}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_day" ) . "\" title=\"{$prev['month_name']} {$prev['year_id']}\">{$this->lang->words['_larr']} {$this->lang->words['day_previous']}</a></li>
		<li class='forward'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showday&amp;y={$data['next_day'][0]}&amp;m={$data['next_day'][1]}&amp;d={$data['next_day'][2]}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_day" ) . "\" title=\"{$next['month_name']} {$next['year_id']}\">{$this->lang->words['day_next']} {$this->lang->words['_rarr']}</a></li>
		<li>
			<a href='#mini_calendar_jump' id='month_jump' class='ipsType_smaller'>{$this->lang->words['jump_to']}</a>
		</li>
	</ul>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar", "public",'' ), "", "" ) . "\" method=\"post\" style='display: none' id='mini_calendar_jump'>
		<fieldset class='ipsPad'>
			<input type='hidden' name='cal_id' value='{$this->request['cal_id']}' />
			<label for='m' class='hide'>{$this->lang->words['fv_months']}:</label>
			<select name=\"m\" class='input_select'>{$data['month_box']}</select>&nbsp;
			<label for='year' class='hide'>{$this->lang->words['fv_years']}:</label>
			<select name=\"y\" class='input_select'>{$data['year_box']}</select>&nbsp;
			<input type='submit' class='input_submit' value='{$this->lang->words['jmp_go']}' />
		</fieldset>
	</form>
	<ul class='topic_buttons'>
		" . (($this->memberData['member_id'] && $this->registry->permissions->check( 'start', $data['calendar'] )) ? ("
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=post&amp;cal_id={$data['calendar']['cal_id']}&amp;do=newevent&amp;d={$this->request['d']}&amp;m={$data['chosen_date']['month']}&amp;y={$data['chosen_date']['year']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_post" ) . "' title='{$this->lang->words['event_add_single']}'>{$this->lang->words['event_add_single']}</a></li>
		") : ("
			<li class='disabled'><span>{$this->lang->words['calendar_no_post']}</span></li>
		")) . "
	</ul>
</div>
<div class='maintitle ipsFilterbar' style='text-align: center'>
	<ul class='ipsList_inline'>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;m={$data['chosen_date']['month']}&amp;y={$data['chosen_date']['year']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_month" ) . "' id='view_month'><img src='{$this->settings['img_url']}/icon_month.png' />&nbsp; {$this->lang->words['view_month_view']}</a></li>
		<li>
			<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showweek&amp;week={$data['this_week']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_week" ) . "\" title=\"{$this->lang->words['view_this_week']}\" id='view_week'><img src='{$this->settings['img_url']}/icon_week.png' />&nbsp; {$this->lang->words['view_week_view']}</a>
		</li>
		<li class='active'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showday&amp;y={$data['chosen_date']['year']}&amp;m={$data['chosen_date']['month']}&amp;d={$data['chosen_date']['day']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_day" ) . "' id='view_day'><img src='{$this->settings['img_url']}/icon_day.png' />&nbsp; {$this->lang->words['view_day_view']}</a></li>
	</ul>
</div>
<div class='ipsBox ipsLayout ipsLayout_withright ipsLayout_largeright clearfix'>
	<div class='ipsBox_container ipsLayout_content'>
		" . (($data['events']) ? ("
			{$data['events']}
		") : ("
			<div class='no_messages'>
				{$this->lang->words['no_events_for_today']}
			</div>
		")) . "
	</div>
	<div class='ipsLayout_right'>
		<div class='ipsBox_container ipsPad' id='cal_date_wrap'>
			<span class='cal_date_day'>" . ltrim( $this->request['d'], '0' ) . "</span><br />
			<span class='cal_date_monthyear'>{$data['chosen_date']['month_name']} {$this->request['y']}</span>
		</div>
		" . (($data['calendar']['cal_bday_limit']) ? ("
			<br />
			<div class='ipsBox_container ipsPad'>
				{$data['birthdays']}
			</div>
		") : ("")) . "
	</div>
</div>";
return $IPBHTML;
}

/* -- calendarJump --*/
function calendarJump($calendars, $calendar, $chosen_date=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarJump'] ) )
{
$count_50bb5d879718e82b7a29ea75a72cf0d8 = is_array($this->functionData['calendarJump']) ? count($this->functionData['calendarJump']) : 0;
$this->functionData['calendarJump'][$count_50bb5d879718e82b7a29ea75a72cf0d8]['calendars'] = $calendars;
$this->functionData['calendarJump'][$count_50bb5d879718e82b7a29ea75a72cf0d8]['calendar'] = $calendar;
$this->functionData['calendarJump'][$count_50bb5d879718e82b7a29ea75a72cf0d8]['chosen_date'] = $chosen_date;
}
$IPBHTML .= "" . ((is_array( $calendars ) && count( $calendars ) > 1) ? ("
	<span class='desc calendar_jump clearfix'>{$this->lang->words['cal_in']} <a href='#calendar_chooser_menucontent' title='{$this->lang->words['switch_calendar']}' class='calendar_dropdown ipsButton_secondary' id='calendar_chooser'><strong>{$calendar['cal_title']}</strong> <img src='{$this->settings['img_url']}/dropdown.png' /></a></span>
	<ul class='ipbmenu_content' style='display: none' id='calendar_chooser_menucontent'>
		".$this->__f__949c8cb1e22be933a21b564606aea0cd($calendars,$calendar,$chosen_date)."	</ul>
	<script type='text/javascript'>
		new ipb.Menu( $('calendar_chooser'), $('calendar_chooser_menucontent') );
	</script>
") : ("
	<span class='desc calendar_jump blend_links'>{$this->lang->words['cal_in']} <strong><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$calendar['cal_id']}&amp;m={$chosen_date['month']}&amp;y={$chosen_date['year']}", "public",'' ), "{$calendar['cal_title_seo']}", "cal_month" ) . "' title=\"{$this->lang->words['view_this_calendar']}\" class='rounded'>{$calendar['cal_title']}</a></strong></span>
")) . "";
return $IPBHTML;
}


function __f__949c8cb1e22be933a21b564606aea0cd($calendars, $calendar, $chosen_date=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $calendars as $cid => $cal )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='clearfix'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$cid}&amp;m={$chosen_date['month']}&amp;y={$chosen_date['year']}", "public",'' ), "{$cal['cal_title_seo']}", "cal_month" ) . "' title=\"{$this->lang->words['view_this_calendar']}\">{$cal['cal_title']}</a>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calendarMainContent --*/
function calendarMainContent($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarMainContent'] ) )
{
$count_919d46468c282cdeaa168812cbb01278 = is_array($this->functionData['calendarMainContent']) ? count($this->functionData['calendarMainContent']) : 0;
$this->functionData['calendarMainContent'][$count_919d46468c282cdeaa168812cbb01278]['data'] = $data;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
<script type='text/javascript'>
	ipb.vars['month_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=view&cal_id={$data['calendar']['cal_id']}", "public",'' ), "", "" ) . "\";
	ipb.vars['week_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=view&cal_id={$data['calendar']['cal_id']}&do=showweek", "public",'' ), "", "" ) . "\";
	ipb.vars['day_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=view&cal_id={$data['calendar']['cal_id']}&do=showday", "public",'' ), "", "" ) . "\";
	ipb.vars['add_event_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=post&cal_id={$data['calendar']['cal_id']}&do=newevent", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_post" ) . "\";
	
	ipb.calendar.currentView = \"month\";
</script>
<div class='right'>
	{$data['_like_strip']}
</div>
<h1 class='ipsType_pagetitle calendar_title left'>{$data['month_title']} {$data['chosen_date']['year']}</h1>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'calendarJump' ) ? $this->registry->getClass('output')->getTemplate('calendar')->calendarJump($data['calendars'], $data['calendar'], $data['chosen_date']) : '' ) . "
<br /><br />
<div class='topic_controls clearfix'>
	<ul class='pagination ipsList_inline left'>
		<li class='back'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;m={$data['prev_month']['month_id']}&amp;y={$data['prev_month']['year_id']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_month" ) . "\" title=\"{$data['prev_month']['month_name']} {$data['prev_month']['year_id']}\">{$this->lang->words['_larr']} {$this->lang->words['month_previous']}</a></li>
		<li class='forward'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;m={$data['next_month']['month_id']}&amp;y={$data['next_month']['year_id']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_month" ) . "\" title=\"{$data['next_month']['month_name']} {$data['next_month']['year_id']}\">{$this->lang->words['month_next']} {$this->lang->words['_rarr']}</a></li>
		<li>
			<a href='#mini_calendar_jump' id='month_jump' class='ipsType_smaller'>{$this->lang->words['jump_to']}</a>
		</li>
	</ul>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar", "public",'' ), "", "" ) . "\" method=\"post\" style='display: none' id='mini_calendar_jump'>
		<fieldset class='ipsPad'>
			<input type='hidden' name='cal_id' value='{$this->request['cal_id']}' />
			<label for='m' class='hide'>{$this->lang->words['fv_months']}:</label>
			<select name=\"m\" class='input_select'>{$data['month_box']}</select>&nbsp;
			<label for='year' class='hide'>{$this->lang->words['fv_years']}:</label>
			<select name=\"y\" class='input_select'>{$data['year_box']}</select>&nbsp;
			<input type='submit' class='input_submit' value='{$this->lang->words['jmp_go']}' />
		</fieldset>
	</form>
	<ul class='topic_buttons'>
		" . (($this->memberData['member_id'] && $this->registry->permissions->check( 'start', $data['calendar'] )) ? ("
			<li><a id='ips_addEventButton' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=post&amp;cal_id={$data['calendar']['cal_id']}&amp;do=newevent", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_post" ) . "' title='{$this->lang->words['event_add_single']}'>{$this->lang->words['event_add_single']}</a></li>
		") : ("
			<li class='disabled'><span>{$this->lang->words['calendar_no_post']}</span></li>
		")) . "
	</ul>
</div>
<div class='maintitle ipsFilterbar ipsForm_center'>
	<ul class='ipsList_inline'>
		<li class='active'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;m={$data['navigation']['this_month']['m']}&amp;y={$data['navigation']['this_month']['y']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_month" ) . "' title=\"{$this->lang->words['view_this_month']}\" id='view_month'><img src='{$this->settings['img_url']}/icon_month.png' />&nbsp; {$this->lang->words['view_month_view']}</a></li>
		<li>
			<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showweek&amp;week={$data['navigation']['this_week']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_week" ) . "\" title=\"{$this->lang->words['view_this_week']}\" id='view_week'><img src='{$this->settings['img_url']}/icon_week.png' />&nbsp; {$this->lang->words['view_week_view']}</a>
		</li>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showday&amp;y={$data['navigation']['this_month']['y']}&amp;m={$data['navigation']['this_month']['m']}&amp;d=01", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_day" ) . "' title=\"{$this->lang->words['view_this_day']}\" id='view_day'><img src='{$this->settings['img_url']}/icon_day.png' />&nbsp; {$this->lang->words['view_day_view']}</a></li>
	</ul>
</div>
<div class='ipsBox'>
	<div class='ipsBox_container'>
		<table id='calendar_table' class='ipsCalendar ipb_table vcalendar' summary=\"{$this->lang->words['calendar_for']} {$data['month_title']} {$data['chosen_date']['year']}\">
			<tr class='header'>
				".$this->__f__bcceecb759b514096e09f0ec5a286c5b($data)."				{$data['events']}
			</tr>
		</table>
	</div>
</div>
<br />
<ul class='ipsList_inline ipsType_small'>
	<li>
		<a class='calendar_icon' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=feed&amp;section=output&amp;cal_id={$data['calendar']['cal_id']}", "public",'' ), "", "" ) . "' title=\"{$this->lang->words['download_this_calendar']}\"><img src='{$this->settings['img_url']}/download.png' alt=\"{$this->lang->words['download_this_calendar']}\" title=\"{$this->lang->words['download_this_calendar']}\" /> {$this->lang->words['download_this_calendar']}</a>
	</li>
	<li>
		<a class='calendar_icon' href='" . str_replace( array( 'https://', 'http://' ), 'webcal://', $this->settings['base_url'] ) . "app=calendar&amp;module=feed&amp;section=output&amp;cal_id={$data['calendar']['cal_id']}' title=\"{$this->lang->words['subscribe_this_calendar']}\"><img src='{$this->settings['img_url']}/transmit.png' alt=\"{$this->lang->words['subscribe_this_calendar']}\" title=\"{$this->lang->words['subscribe_this_calendar']}\" /> {$this->lang->words['subscribe_this_calendar']}</a>
	</li>
</ul>
<div id='mini_calendars' class='two_wide clearfix'>
	<div class='left'>
		{$data['minical_prev']}
	</div>
	<div class='right'>
		{$data['minical_next']}
	</div>
</div>
<br />";
return $IPBHTML;
}


function __f__bcceecb759b514096e09f0ec5a286c5b($data)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['day_words'] as $day )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<th scope='col'>{$day}</th>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calendarShowEvent --*/
function calendarShowEvent($events, $comments) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
{$events}
<div id='event_comments' class='ipsBox'>
	<div class='ipsBox_container ipsPad'>
		<h2 class='ipsType_subtitle'>{$comments['count']} {$this->lang->words['comment_block']}</h2>
		<div class='event_comment_wrap'>
			{$comments['html']}
		</div>
	</div>
</div>";
return $IPBHTML;
}

/* -- calendarWeekView --*/
function calendarWeekView($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarWeekView'] ) )
{
$count_8bb44fae54d720703a19d138d2622921 = is_array($this->functionData['calendarWeekView']) ? count($this->functionData['calendarWeekView']) : 0;
$this->functionData['calendarWeekView'][$count_8bb44fae54d720703a19d138d2622921]['data'] = $data;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
<script type='text/javascript'>
	ipb.vars['month_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=view&cal_id={$data['calendar']['cal_id']}", "public",'' ), "", "" ) . "\";
	ipb.vars['week_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=view&cal_id={$data['calendar']['cal_id']}&do=showweek", "public",'' ), "", "" ) . "\";
	ipb.vars['day_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=view&cal_id={$data['calendar']['cal_id']}&do=showday", "public",'' ), "", "" ) . "\";
	ipb.vars['add_event_url'] = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&section=post&cal_id={$data['calendar']['cal_id']}&do=newevent", "public",'' ), "", "" ) . "\";
	
	ipb.calendar.currentView = \"week\";
</script>
<h1 class='ipsType_pagetitle calendar_title'>{$this->lang->words['week_beginning']} {$data['start_date']}</h1>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'calendarJump' ) ? $this->registry->getClass('output')->getTemplate('calendar')->calendarJump($data['calendars'], $data['calendar'], $data['chosen_date']) : '' ) . "
<br /><br />
<div class='topic_controls clearfix'>
	<ul class='pagination ipsList_inline left'>
		<li class='back'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showweek&amp;week={$data['prev_week']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_week" ) . "\" title=\"{$this->lang->words['week_previous']}\">{$this->lang->words['_larr']} {$this->lang->words['week_previous']}</a></li>
		<li class='forward'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showweek&amp;week={$data['next_week']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_week" ) . "\" title=\"{$this->lang->words['week_next']}\">{$this->lang->words['week_next']} {$this->lang->words['_rarr']}</a></li>
		<li>
			<a href='#mini_calendar_jump' id='month_jump' class='ipsType_smaller'>{$this->lang->words['jump_to']}</a>
		</li>
	</ul>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar", "public",'' ), "", "" ) . "\" method=\"post\" style='display: none' id='mini_calendar_jump'>
		<fieldset class='ipsPad'>
			<input type='hidden' name='cal_id' value='{$this->request['cal_id']}' />
			<label for='m' class='hide'>{$this->lang->words['fv_months']}:</label>
			<select name=\"m\" class='input_select'>{$data['month_box']}</select>&nbsp;
			<label for='year' class='hide'>{$this->lang->words['fv_years']}:</label>
			<select name=\"y\" class='input_select'>{$data['year_box']}</select>&nbsp;
			<input type='submit' class='input_submit' value='{$this->lang->words['jmp_go']}' />
		</fieldset>
	</form>
	<ul class='topic_buttons'>
		" . (($this->memberData['member_id'] && $this->registry->permissions->check( 'start', $data['calendar'] )) ? ("
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=post&amp;cal_id={$data['calendar']['cal_id']}&amp;do=newevent", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_post" ) . "' title='{$this->lang->words['event_add_single']}'>{$this->lang->words['event_add_single']}</a></li>
		") : ("
			<li class='disabled'><span>{$this->lang->words['calendar_no_post']}</span></li>
		")) . "		
	</ul>
</div>
<div class='maintitle ipsFilterbar' style='text-align: center'>
	<ul class='ipsList_inline'>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;m={$data['chosen_date']['month']}&amp;y={$data['chosen_date']['year']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_month" ) . "' id='view_month'><img src='{$this->settings['img_url']}/icon_month.png' />&nbsp; {$this->lang->words['view_month_view']}</a></li>
		<li class='active'>
			<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showweek&amp;week={$data['this_week']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_week" ) . "\" title=\"{$this->lang->words['view_this_week']}\" id='view_week'><img src='{$this->settings['img_url']}/icon_week.png' />&nbsp; {$this->lang->words['view_week_view']}</a>
		</li>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showday&amp;y={$data['chosen_date']['year']}&amp;m={$data['chosen_date']['month']}&amp;d={$data['chosen_date']['first_day']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_day" ) . "' id='view_day'><img src='{$this->settings['img_url']}/icon_day.png' />&nbsp; {$this->lang->words['view_day_view']}</a></li>
	</ul>
</div>
<div class='ipsBox'>
	<div class='ipsBox_container'>
		<table class='ipsCalendar ipb_table clear vcalendar' id='calendar_table'>
			{$data['events']}
		</table>
	</div>
</div>
<div id='mini_calendars' class='three_wide'>
	<div class='left'>
		{$data['prev_minical']}
	</div>
	<div class='left'>
		{$data['cur_minical']}
	</div>
	<div class='right'>
		{$data['next_minical']}
	</div>
</div>";
return $IPBHTML;
}

/* -- calEventFollowedWrapper --*/
function calEventFollowedWrapper($rows) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calEventFollowedWrapper'] ) )
{
$count_9d22faa0af8569b5cbeb288b352592ae = is_array($this->functionData['calEventFollowedWrapper']) ? count($this->functionData['calEventFollowedWrapper']) : 0;
$this->functionData['calEventFollowedWrapper'][$count_9d22faa0af8569b5cbeb288b352592ae]['rows'] = $rows;
}

if ( ! isset( $this->registry->templateStriping['searchStripe'] ) ) {
$this->registry->templateStriping['searchStripe'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<div id='search_results'>
	<ol>
		" . ((is_array($rows) && count($rows)) ? ("
			".$this->__f__7a776c7a8c397a1d12866d359d336248($rows)."		") : ("")) . "
	</ol>
</div>";
return $IPBHTML;
}


function __f__7a776c7a8c397a1d12866d359d336248($rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $row )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li class='" .  IPSLib::next( $this->registry->templateStriping["searchStripe"] ) . " clearfix clear liwrap'>
						{$row['html']}
					</li>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calEventSearchResult --*/
function calEventSearchResult($r, $resultAsTitle=false, $type, $ends) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calEventSearchResult'] ) )
{
$count_93bb613eefa24793638b48ccb109572a = is_array($this->functionData['calEventSearchResult']) ? count($this->functionData['calEventSearchResult']) : 0;
$this->functionData['calEventSearchResult'][$count_93bb613eefa24793638b48ccb109572a]['r'] = $r;
$this->functionData['calEventSearchResult'][$count_93bb613eefa24793638b48ccb109572a]['resultAsTitle'] = $resultAsTitle;
$this->functionData['calEventSearchResult'][$count_93bb613eefa24793638b48ccb109572a]['type'] = $type;
$this->functionData['calEventSearchResult'][$count_93bb613eefa24793638b48ccb109572a]['ends'] = $ends;
}
$IPBHTML .= "<div class='_recordRow'>
<div class='result_info left'>
	<h3><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$r['type_id_2']}&amp;hl={$this->request['search_higlight']}", "public",'' ), "{$r['event_title_seo']}", "cal_event" ) . "'>{$r['content_title']}</a></h3>
	" . ((!$resultAsTitle) ? ("
	<p>
		{$r['content']}
	</p>
	") : ("")) . "
	" . ((count($r['_followData'])) ? ("
		" . ( method_exists( $this->registry->getClass('output')->getTemplate('search'), 'followData' ) ? $this->registry->getClass('output')->getTemplate('search')->followData($r['_followData']) : '' ) . "
	") : ("")) . "
</div>
	
<div class='result_details desc right' style=\"width:auto;\">
	<input class='input_check checkall toggle_notify_on right' type=\"checkbox\" name=\"likes[]\" value=\"{$r['_followData']['like_app']}-{$r['_followData']['like_area']}-{$r['_followData']['like_rel_id']}\" />
	<a href='#' class='ipsButton_secondary no_width ipbmenu right' id='change_{$r['event_id']}'>{$this->lang->words['followed_changeopts']}</a>
	<div class='ipbmenu_content' id='change_{$r['event_id']}_menucontent' style='display: none; width: 400px; padding: 5px;'>
		<select name='modaction_row' class='input_select' id='form_change_{$r['event_id']}'>
			<option value=''>{$this->lang->words['like_mod__chose']}</option>
			<option value='delete'>{$this->lang->words['like_mod__delete']}</option>
			<option value='change-donotify'>{$this->lang->words['like_mod__change_donotify']}</option>
			<option value='change-donotnotify'>{$this->lang->words['like_mod__change_nonotify']}</option>
			<option value='change-immediate'>{$this->lang->words['like_mod__change_immediate']}</option>
			<option value='change-offline'>{$this->lang->words['like_mod__change_offline']}</option>
			" . (($this->request['search_app'] == 'forums') ? ("
				<option value='change-daily'>{$this->lang->words['like_mod__change_daily']}</option>
				<option value='change-weekly'>{$this->lang->words['like_mod__change_weekly']}</option>
			") : ("")) . "
			<option value='change-anon'>{$this->lang->words['like_mod__change_anon']}</option>
			<option value='change-noanon'>{$this->lang->words['like_mod__change_noanon']}</option>
		</select>
			
		<input type=\"submit\" class=\"input_submit submit_modaction_row\" value=\"{$this->lang->words['update_selected']}\" />
	</div>
	
	<ul>
		<li>{$this->lang->words['search_by']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($r) : '' ) . "</li>
		<li>{$this->lang->words['event_date']}  {$r['_start_date']} 
			" . ((!$ends AND $r['_event_time']) ? ("{$r['_event_time']}") : ("")) . " 
			" . (($ends) ? ("{$ends}") : ("")) . " 
			" . (($ends AND $r['_event_time']) ? ("{$r['_event_time']} " . (($r['_event_etime']) ? ("- {$r['_event_etime']}") : ("")) . "") : ("")) . "
			" . (($r['_event_etime'] AND !$ends) ? ("- {$r['_event_etime']}") : ("")) . " ({$type})</li>
	</ul>
</div>
</div>";
return $IPBHTML;
}

/* -- event_likeSummary --*/
function event_likeSummary($data, $relId, $opts) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("like", "0" ) . "
<div class='__like right' data-app=\"{$data['app']}\" data-area=\"{$data['area']}\" data-relid=\"{$relId}\" data-isfave=\"{$data['iLike']}\">
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'event_likeSummaryContents' ) ? $this->registry->getClass('output')->getTemplate('calendar')->event_likeSummaryContents($data, $relId, $opts) : '' ) . "
</div>
<script type=\"text/javascript\">
	var FAVE_TEMPLATE = new Template( \"<h3>" . sprintf( $this->lang->words['unset_fave_title'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "</h3><div class='ipsPad'><span class='desc'>" . sprintf( $this->lang->words['unset_fave_words'], $this->lang->words['like_un' . $data['vernacular'] ]) . "</span><br /><p class='ipsForm_center'><input type='button' value='" . sprintf( $this->lang->words['unset_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "' class='input_submit _funset' /></p></div>\");
</script>";
return $IPBHTML;
}

/* -- event_likeSummaryContents --*/
function event_likeSummaryContents($data, $relId, $opts=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['event_likeSummaryContents'] ) )
{
$count_bcf19f1c4575847f9b90e097a2298fbb = is_array($this->functionData['event_likeSummaryContents']) ? count($this->functionData['event_likeSummaryContents']) : 0;
$this->functionData['event_likeSummaryContents'][$count_bcf19f1c4575847f9b90e097a2298fbb]['data'] = $data;
$this->functionData['event_likeSummaryContents'][$count_bcf19f1c4575847f9b90e097a2298fbb]['relId'] = $relId;
$this->functionData['event_likeSummaryContents'][$count_bcf19f1c4575847f9b90e097a2298fbb]['opts'] = $opts;
}
$IPBHTML .= "<span class='ipsButton_extra right " . (($data['totalCount']) ? ("_fmore clickable") : ("")) . "' title='" . sprintf( $this->lang->words['like_totalcount_' . $data['vernacular'] ], $data['totalCount'] ) . "' data-tooltip=\"" . sprintf( $this->lang->words['like_totalcount_' . $data['vernacular'] ], $data['totalCount'] ) . "\"><img src='{$this->settings['img_url']}/icon_users.png' /> <strong>{$data['totalCount']}</strong></span>
" . (($this->memberData['member_id']) ? ("<a href='#' title=\"" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['fave_tt_on'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['fave_tt_off'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "\" class='ftoggle ipsButton_secondary'>" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['unset_fave_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['set_fave_button'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "</a>") : ("")) . "";
return $IPBHTML;
}

/* -- eventAttendee --*/
function eventAttendee($member, $event) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['eventAttendee'] ) )
{
$count_7317396b47ddf017925b56d029b34a9b = is_array($this->functionData['eventAttendee']) ? count($this->functionData['eventAttendee']) : 0;
$this->functionData['eventAttendee'][$count_7317396b47ddf017925b56d029b34a9b]['member'] = $member;
$this->functionData['eventAttendee'][$count_7317396b47ddf017925b56d029b34a9b]['event'] = $event;
}
$IPBHTML .= "<li id='attendee-{$member['member_id']}' class='clearfix'>
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userSmallPhoto' ) ? $this->registry->getClass('output')->getTemplate('global')->userSmallPhoto($member) : '' ) . "
	<div class='list_content'>
		" . (($this->memberData['g_is_supmod'] OR $event['_can_delete_rsvp'] OR $member['_can_delete_rsvp']) ? ("
			<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=calendarRSVPRemove&amp;md5check={$this->member->form_hash}&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}&amp;attendee_id={$member['rsvp_id']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['rsvp_delete_link']}' class='right'><img src='{$this->settings['img_url']}/delete.png' alt='{$this->lang->words['rsvp_delete_link']}' title='{$this->lang->words['rsvp_delete_link']}' /></a>
		") : ("")) . "
		<strong>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "</strong>
		<p class='desc lighter'>
			{$this->lang->words['rsvp_date_pre']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($member['rsvp_date'],"short", 0)) . "
		</p>
	</div>
</li>";
return $IPBHTML;
}

/* -- eventsWrapper --*/
function eventsWrapper($events) {
$IPBHTML = "";
$IPBHTML .= "<ul>{$events}</ul>";
return $IPBHTML;
}

/* -- followedContentCalendars --*/
function followedContentCalendars($rows) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['followedContentCalendars'] ) )
{
$count_0bd940a6d89ef4205ef2e56f53aef79b = is_array($this->functionData['followedContentCalendars']) ? count($this->functionData['followedContentCalendars']) : 0;
$this->functionData['followedContentCalendars'][$count_0bd940a6d89ef4205ef2e56f53aef79b]['rows'] = $rows;
}
$IPBHTML .= "<div id='search_results'>
	<ol>
		".$this->__f__edca9e1ce9e213316c539a0537cda7ba($rows)."	</ol>
</div>";
return $IPBHTML;
}


function __f__edca9e1ce9e213316c539a0537cda7ba($rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class=\"row1 clearfix clear liwrap\">
				<div class='result_info'>
					<h3><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$r['cal_id']}", "public",'' ), "{$r['cal_title_seo']}", "cal_calendar" ) . "'>{$r['cal_title']}</a></h3>
					" . ( method_exists( $this->registry->getClass('output')->getTemplate('search'), 'followData' ) ? $this->registry->getClass('output')->getTemplate('search')->followData($r['_followData']) : '' ) . "
				</div>
				<div class='right'>
					<a href='#' class='ipsButton_secondary no_width ipbmenu' id='change_{$r['cal_id']}'>{$this->lang->words['followed_changeopts']}</a>
					<input class='input_check checkall toggle_notify_on' type=\"checkbox\" name=\"likes[]\" value=\"{$r['_followData']['like_app']}-{$r['_followData']['like_area']}-{$r['_followData']['like_rel_id']}\" />
					<div class='ipbmenu_content' id='change_{$r['cal_id']}_menucontent' style='display: none; width: 400px; padding: 5px;'>
						<select name='modaction_row' class='input_select' id='form_change_{$r['cal_id']}'>
							<option value=''>{$this->lang->words['like_mod__chose']}</option>
							<option value='delete'>{$this->lang->words['like_mod__delete']}</option>
							<option value='change-donotify'>{$this->lang->words['like_mod__change_donotify']}</option>
							<option value='change-donotnotify'>{$this->lang->words['like_mod__change_nonotify']}</option>
							<option value='change-immediate'>{$this->lang->words['like_mod__change_immediate']}</option>
							<option value='change-offline'>{$this->lang->words['like_mod__change_offline']}</option>
							" . (($this->request['search_app'] == 'forums') ? ("
								<option value='change-daily'>{$this->lang->words['like_mod__change_daily']}</option>
								<option value='change-weekly'>{$this->lang->words['like_mod__change_weekly']}</option>
							") : ("")) . "
							<option value='change-anon'>{$this->lang->words['like_mod__change_anon']}</option>
							<option value='change-noanon'>{$this->lang->words['like_mod__change_noanon']}</option>
						</select>
							
						<input type=\"submit\" class=\"input_submit submit_modaction_row\" value=\"{$this->lang->words['update_selected']}\" />
					</div>
				</div>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- mini_cal_blank_cell --*/
function mini_cal_blank_cell() {
$IPBHTML = "";
$IPBHTML .= "<td class='blank'><!-- no content --></td>";
return $IPBHTML;
}

/* -- mini_cal_date_cell --*/
function mini_cal_date_cell($day=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['mini_cal_date_cell'] ) )
{
$count_50d65e059d1c4b7e2a92a4ff525d9fbc = is_array($this->functionData['mini_cal_date_cell']) ? count($this->functionData['mini_cal_date_cell']) : 0;
$this->functionData['mini_cal_date_cell'][$count_50d65e059d1c4b7e2a92a4ff525d9fbc]['day'] = $day;
}
$IPBHTML .= "<td>
	" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . "
</td>";
return $IPBHTML;
}

/* -- mini_cal_date_cell_today --*/
function mini_cal_date_cell_today($day=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['mini_cal_date_cell_today'] ) )
{
$count_a927ebdf7a8ce487c57c8fcf9a4a6a27 = is_array($this->functionData['mini_cal_date_cell_today']) ? count($this->functionData['mini_cal_date_cell_today']) : 0;
$this->functionData['mini_cal_date_cell_today'][$count_a927ebdf7a8ce487c57c8fcf9a4a6a27]['day'] = $day;
}
$IPBHTML .= "<td class=\"today\">
	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . "</strong>
</td>";
return $IPBHTML;
}

/* -- mini_cal_new_row --*/
function mini_cal_new_row($week="", $calendar) {
$IPBHTML = "";
$IPBHTML .= "</tr>
<tr>";
return $IPBHTML;
}

/* -- miniCalendarWrapper --*/
function miniCalendarWrapper($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['miniCalendarWrapper'] ) )
{
$count_e43568ca4af1d5c381ffd81c505dc632 = is_array($this->functionData['miniCalendarWrapper']) ? count($this->functionData['miniCalendarWrapper']) : 0;
$this->functionData['miniCalendarWrapper'][$count_e43568ca4af1d5c381ffd81c505dc632]['data'] = $data;
}
$IPBHTML .= "<div class='mini_cal_wrap ipsBox'>
	<div class='ipsBox_container'>
		<h3 class='ipsType_subtitle'>{$data['month_title']} {$data['year']}</h3>
		<table class='mini_cal vcalendar'>
			<tr>
				".$this->__f__80b8170fedb0bf6e656e59f768de6697($data)."			
				{$data['events']}
			</tr>
		</table>
	</div>
</div>";
return $IPBHTML;
}


function __f__80b8170fedb0bf6e656e59f768de6697($data)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['day_words'] as $day )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<th>" . IPSText::mbsubstr( $day, 0, 1 ) . "</th>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- modEventsWrapper --*/
function modEventsWrapper($events, $pages) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['modEventsWrapper'] ) )
{
$count_73aa6577a9c37b391ab28d3b0363da89 = is_array($this->functionData['modEventsWrapper']) ? count($this->functionData['modEventsWrapper']) : 0;
$this->functionData['modEventsWrapper'][$count_73aa6577a9c37b391ab28d3b0363da89]['events'] = $events;
$this->functionData['modEventsWrapper'][$count_73aa6577a9c37b391ab28d3b0363da89]['pages'] = $pages;
}
$IPBHTML .= "<div>{$pages}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	" . ((count($events)) ? ("
		".$this->__f__00bfab5f209b3f58f27d578065c391d3($events,$pages)."	") : ("
		<div class='no_messages clear'>
			{$this->lang->words['no_events_pend_app']}
		</div>
	")) . "
	<div>{$pages}</div>
</div>";
return $IPBHTML;
}


function __f__00bfab5f209b3f58f27d578065c391d3($events, $pages)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $events as $event )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'showEventSimple' ) ? $this->registry->getClass('output')->getTemplate('calendar')->showEventSimple($event['event']) : '' ) . "
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showEvent --*/
function showEvent($event, $member, $typeInfo, $like='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['showEvent'] ) )
{
$count_3e157d388f6c8ef468328c880d269e05 = is_array($this->functionData['showEvent']) ? count($this->functionData['showEvent']) : 0;
$this->functionData['showEvent'][$count_3e157d388f6c8ef468328c880d269e05]['event'] = $event;
$this->functionData['showEvent'][$count_3e157d388f6c8ef468328c880d269e05]['member'] = $member;
$this->functionData['showEvent'][$count_3e157d388f6c8ef468328c880d269e05]['typeInfo'] = $typeInfo;
$this->functionData['showEvent'][$count_3e157d388f6c8ef468328c880d269e05]['like'] = $like;
}
$IPBHTML .= "" . ((!$this->settings['disable_lightbox']) ? ("
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) : '' ) . "
" . $this->registry->getClass('output')->addJSModule("rating", "0" ) . "
" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
<div class='right'>
	{$event['_like_strip']}
</div>
<div itemscope itemtype=\"http://schema.org/Event\">
<img src='{$member['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_medium left' />
<div class='ipsBox_withphoto'>
	<span class='rating ipsType_smaller'>" . (($event['_can_rate']) ? ("<strong>{$this->lang->words['js_rate_event']}</strong>&nbsp;&nbsp;") : ("")) . "
		" . (($event['_can_rate']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=1&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_1' title='{$this->lang->words['eve_js_1star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=2&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_2' title='{$this->lang->words['eve_js_2star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=3&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_3' title='{$this->lang->words['eve_js_3star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=4&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_4' title='{$this->lang->words['eve_js_4star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=5&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_5' title='{$this->lang->words['eve_js_5star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a>") : ("")) . "
		<span id='rating_text'>
			" . (($event['event_rating_hits'] > 0) ? ("<span id='rating_hits'>{$event['event_rating_hits']} {$this->lang->words['event_rates']}</span>") : ("")) . "
		</span>
		" . (($event['_can_rate']) ? ("<script type='text/javascript'>
			//<![CDATA[
				rating = new ipb.rating( 'event_rate_', { 
									url: ipb.vars['base_url'] + 'app=calendar&module=ajax&section=rating&event_id={$event['event_id']}&md5check=' + ipb.vars['secure_hash'],
									cur_rating: {$event['event_rating_avg']},
									rated: " . (($event['_rating_value'] != -1) ? ("1") : ("0")) . ",
									allow_rate: {$event['_can_rate']},
									multi_rate: 1,
									show_rate_text: true
								  } );
			//]]>
			</script>") : ("")) . "
	</span>
	<h1 itemprop=\"name\" class='ipsType_pagetitle calendar_title clearfix'>{$this->lang->words['event_prefix']} {$event['event_title']}</h1>
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'calendarJump' ) ? $this->registry->getClass('output')->getTemplate('calendar')->calendarJump($typeInfo['calendars'], $typeInfo['calendar'], $typeInfo['chosen_date']) : '' ) . "
	<div class='ipsType_pagedesc clear'>
		{$this->lang->words['added_by']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . ", " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($event['event_saved'],"DATE", 0)) . "
	</div>
</div>
<br /><br />
<h2 class='maintitle'>
	{$this->lang->words['taking_place']}
	<meta itemprop=\"startDate\" content=\"" . date( 'c', $event['_start_time'] ) . "\">
	<abbr class=\"dtstart\" title=\"" . date( 'c', $event['_start_time'] ) . "\">{$event['_start_date']}" . ((!$typeInfo['ends']) ? (" {$event['_event_time']}") : ("")) . "</abbr> 
	" . (($typeInfo['ends']) ? ("<abbr class=\"dtend\" title=\"" . date( 'c', $event['_end_time'] ) . "\">{$typeInfo['ends']}</abbr>") : ("")) . "
	" . (($event['_event_etime'] AND $typeInfo['ends']) ? ("{$event['_event_time']} - {$event['_event_etime']}") : ("" . (($event['_event_etime']) ? ("- <abbr class=\"dtend\" title=\"" . date( 'c', $event['_end_time'] ) . "\">{$event['_event_etime']}</abbr>") : ("")) . "")) . "
	({$typeInfo['type']})</strong>
</h2>
<div class='ipsBox " . (($event['event_rsvp']) ? ("ipsLayout ipsLayout_withright ipsLayout_largeright") : ("")) . " clearfix'>
	<div class='ipsBox_container " . (($event['event_rsvp']) ? ("ipsLayout_content") : ("")) . " clearfix'>
		<div class='post_block no_sidebar vcalendar clearfix " . (($event['event_approved']==0) ? ("moderated") : ("")) . "' id='event_id_{$event['event_id']}'>
			<div class='post_wrap vevent'>
				" . (($member['member_id']) ? ("
					<h3 class='row2'>
				") : ("
					<h3 class='guest row2'>
				")) . "
				<span class='post_id right desc'><a itemprop=\"url\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "' rel='bookmark url' title='{$this->lang->words['link_to_event']} {$event['event_title']}'>{$this->lang->words['permalink_link']}</a></span>
					" . (($member['member_id']) ? ("
						<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "</span>
					") : ("
						" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "
					")) . "
				</h3>
				<div class='post_body'>
					<div itemprop=\"description\" class='post entry-content description'>
						<br />
						{$event['event_content']}
						{$event['event_attach_content']}
					</div>
					<!-- Reputation: -->
					" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('global_other')->repButtons($member, array_merge( array( 'primaryId' => $event['event_id'], 'domLikeStripId' => 'like_event_' . $event['event_id'], 'domCountId' => 'rep_event_' . $event['event_id'], 'app' => 'calendar', 'type' => 'event_id', 'likeFormatted' => $event['like']['formatted'] ), $event )) : '' ) . "
				</div>
				<ul class='post_controls'>
					" . (($event['_canReport']) ? ("
						<li class='report'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=reports&amp;rcom=calendar&amp;event_id={$event['event_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['report_event']}'>{$this->lang->words['report']}</a></li>
					") : ("")) . "
					" . (($this->memberData['g_is_supmod'] OR $this->memberData['member_id'] == $event['event_member_id']) ? ("
						<li class='post_del'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=delete&amp;md5check={$this->member->form_hash}&amp;event_id={$event['event_id']}&amp;cal_id={$event['event_calendar_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['calendar_delete_title']}' data-confirmaction=\"true\">{$this->lang->words['calendar_delete_button']}</a></li>
						<li class='post_edit'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=post&amp;do=edit&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['calendar_edit_title']}'>{$this->lang->words['calendar_edit_button']}</a></li>
					") : ("")) . "
					" . (($this->memberData['g_is_supmod']) ? ("" . (($event['event_approved']) ? ("
							<li class='post_unapprove'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=calendarEventApprove&amp;modfilter={$this->request['modfilter']}&amp;approve=0&amp;md5check={$this->member->form_hash}&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['unapprove_event']}'>{$this->lang->words['unapprove_event']}</a></li>
						") : ("
							<li class='post_approve'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=calendarEventApprove&amp;modfilter={$this->request['modfilter']}&amp;approve=1&amp;md5check={$this->member->form_hash}&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['approve_event']}'>{$this->lang->words['approve_event']}</a></li>
						")) . "") : ("")) . "
				</ul>
			</div>			
		</div>
	</div>
	" . (($event['event_rsvp']) ? ("<div class='ipsBox_container ipsLayout_right'>
			<div id='event_rsvp' class='ipsPad'>
				<h3 class='ipsType_subtitle'>{$this->lang->words['rsvp_title_header']}</h3>
				<span class='desc'>
					{$this->lang->words['event_poster_want_rsvp']}
				</span>
			
				" . (($event['_can_rsvp'] OR !$event['_have_rsvp']) ? ("<br /><br />
					" . (($event['_can_rsvp']) ? ("
						<a id='rsvp_button' rel='event_id_{$event['event_id']}' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}&amp;_rsvp=1", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "' title='{$this->lang->words['click_to_rsvp']}' class='ipsButton'>{$this->lang->words['rsvp_button']}</a>
					") : ("" . ((!$event['_have_rsvp']) ? ("
							<span class='desc lighter'>{$this->lang->words['noperm_rsvp']}</span>
						") : ("")) . "")) . "") : ("")) . "
				
				<br /><br />
				" . (($event['_rsvp_count'] > count( $event['_rsvp_attendees_short'] )) ? ("
					<a href='#' id='see_all_attendees' class='right ipsButton_secondary'>{$this->lang->words['rsvp_seeall']}</a>
				") : ("")) . "
				<h3 class='ipsType_subtitle'>" . sprintf( $this->lang->words['rsvp_whois_attending'], $event['_rsvp_count'] ) . "</h3>
				" . ((count($event['_rsvp_attendees_short'])) ? ("
					<ul id='attendee_list' class='ipsList_withminiphoto'>
					".$this->__f__94352d016332588774a37f4d0e1e4848($event,$member,$typeInfo,$like)."					</ul>
				") : ("
					<p id='no_attendees' class='desc'>{$this->lang->words['no_rsvp_yet']}</p>
				")) . "
				</ul>
			</div>
		</div>
		" . (($event['_rsvp_count'] > count( $event['_rsvp_attendees_short'] )) ? ("
			<div id='see_all_attendees_popup' style='display: none'>
				<h3>" . sprintf( $this->lang->words['rsvp_whois_attending'], $event['_rsvp_count'] ) . "</h3>
				<div class='fixed_inner'>
					<ul id='attendee_list' class='ipsPad ipsList_withminiphoto'>
					".$this->__f__951f916ed90a58dee66a75345b4c0990($event,$member,$typeInfo,$like)."					</ul>
				</div>
			</div>
			<script type='text/javascript'>
				$('see_all_attendees').on('click', function(e){
					Event.stop(e);
					new ipb.Popup( 'see_all', { 	type: 'pane',
									initial: $('see_all_attendees_popup').show(),
									hideAtStart: false,
									stem: false,
									hideClose: false,
									w: '350px',
									h: 300
								} );
				});
			</script>
		") : ("")) . "") : ("")) . "
</div>
</div>
<div>
	" . (($this->settings['sl_enable']) ? ("
		<br />
		<div class='left'>
			" . IPSLib::shareLinks( $event['event_title'] ) . "
		</div>
	") : ("")) . "
</div>
<br class='clear' /><br />";
return $IPBHTML;
}


function __f__94352d016332588774a37f4d0e1e4848($event, $member, $typeInfo, $like='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $event['_rsvp_attendees_short'] as $attendee )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'eventAttendee' ) ? $this->registry->getClass('output')->getTemplate('calendar')->eventAttendee($attendee, $event) : '' ) . "
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__951f916ed90a58dee66a75345b4c0990($event, $member, $typeInfo, $like='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $event['_rsvp_attendees'] as $attendee )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'eventAttendee' ) ? $this->registry->getClass('output')->getTemplate('calendar')->eventAttendee($attendee, $event) : '' ) . "
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showEventSimple --*/
function showEventSimple($event) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['showEventSimple'] ) )
{
$count_97a6d58fd39f354c5f8d74cecb7b5d65 = is_array($this->functionData['showEventSimple']) ? count($this->functionData['showEventSimple']) : 0;
$this->functionData['showEventSimple'][$count_97a6d58fd39f354c5f8d74cecb7b5d65]['event'] = $event;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("rating", "0" ) . "
<div class='post_block no_sidebar " . (($event['event_approved']==0) ? ("moderated") : ("")) . "' id='event_id_{$event['event_id']}'>
	<div class='post_wrap vevent clearfix'>
		<h3 class='row2'>
			
			<span class='rating right ipsType_smaller'>" . (($event['_can_rate']) ? ("<strong>{$this->lang->words['js_rate_event']}</strong>&nbsp;&nbsp;") : ("")) . "
				" . (($event['_can_rate']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=1&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_{$event['event_id']}_1' title='{$this->lang->words['eve_js_1star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=2&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_{$event['event_id']}_2' title='{$this->lang->words['eve_js_2star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=3&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_{$event['event_id']}_3' title='{$this->lang->words['eve_js_3star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=4&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_{$event['event_id']}_4' title='{$this->lang->words['eve_js_4star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=5&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_{$event['event_id']}_5' title='{$this->lang->words['eve_js_5star']}'>") : ("")) . "" . (($event['event_rating_avg'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($event['_can_rate']) ? ("</a>") : ("")) . "
				<span id='rating_text'>
					" . (($event['event_rating_hits'] > 0) ? ("<span id='rating_hits'>{$event['event_rating_hits']} {$this->lang->words['event_rates']}</span>") : ("")) . "
				</span>
				" . (($event['_can_rate']) ? ("<script type='text/javascript'>
					//<![CDATA[
						rating = new ipb.rating( 'event_rate_{$event['event_id']}_', { 
											url: ipb.vars['base_url'] + 'app=calendar&module=ajax&section=rating&event_id={$event['event_id']}&md5check=' + ipb.vars['secure_hash'],
											cur_rating: {$event['event_rating_avg']},
											rated: " . (($event['_rating_value'] != -1) ? ("1") : ("0")) . ",
											allow_rate: {$event['_can_rate']},
											multi_rate: 1,
											show_rate_text: true
										  } );
					//]]>
					</script>") : ("")) . "
			</span>
			
			<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$event['event_member_id']}", "public",'' ), "{$event['members_seo_name']}", "showuser" ) . "\" title=\"{$this->lang->words['view_profile']}\" class='ipsUserPhotoLink left'>
				<img src='{$event['pp_small_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
			</a>
			<span class='summary'>
				<strong><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "' title='{$this->lang->words['view_event_title']} {$event['event_title']}'>{$event['event_title']}</a></strong><br />
				<span class='desc'>{$this->lang->words['by']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($event) : '' ) . "</span>
				
			</span>
			
		</h3>
		<span class='post_id'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "' class='hide' rel='bookmark url' title='{$this->lang->words['link_to_event']} {$event['event_title']}'>{$this->lang->words['permalink_link']}</a></span>

		<div class='post_body'>
			<div class='post entry-content description'>
				{$event['event_content']}
				{$event['event_attach_content']}
			</div>
			" . (($event['event_rsvp']) ? ("<div class='rsvp'>
					" . ((count( $event['_rsvp_attendees'] )) ? ("
						<strong class='desc'>" . count( $event['_rsvp_attendees'] ) . " {$this->lang->words['members_are_attending']}</strong>
						<div class='clearfix'>
							".$this->__f__8636f6ecd8d9acfd96cb31f5c239e339($event)."						</div>
					") : ("
						<span class='desc lighter'>{$this->lang->words['no_rsvp_yet']}</span>
					")) . "
				</div>") : ("")) . "
		</div>
		<br />
			<ul class='post_controls'>
				" . (($this->memberData['g_is_supmod'] OR $this->memberData['member_id'] == $event['event_member_id']) ? ("
					<li class='post_del'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=delete&amp;md5check={$this->member->form_hash}&amp;event_id={$event['event_id']}&amp;cal_id={$event['event_calendar_id']}&amp;modcp={$this->request['tab']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['calendar_delete_title']}' data-confirmaction=\"true\">{$this->lang->words['calendar_delete_button']}</a></li>
					<li class='post_edit'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=post&amp;do=edit&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['calendar_edit_title']}'>{$this->lang->words['calendar_edit_button']}</a></li>
				") : ("")) . "
				" . (($this->memberData['g_is_supmod']) ? ("" . (($event['event_approved']) ? ("
						<li class='post_unapprove'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=calendarEventApprove&amp;modfilter={$this->request['modfilter']}&amp;approve=0&amp;md5check={$this->member->form_hash}&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}&amp;modcp={$this->request['tab']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['unapprove_event']}'>{$this->lang->words['unapprove_event']}</a></li>
					") : ("
						<li class='post_approve'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=calendarEventApprove&amp;modfilter={$this->request['modfilter']}&amp;approve=1&amp;md5check={$this->member->form_hash}&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}&amp;modcp={$this->request['tab']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['approve_event']}'>{$this->lang->words['approve_event']}</a></li>
					")) . "") : ("")) . "
			</ul>
		<br />
	</div>			
</div>";
return $IPBHTML;
}


function __f__8636f6ecd8d9acfd96cb31f5c239e339($event)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $event['_rsvp_attendees'] as $idx => $rsvper )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$rsvper['rsvp_member_id']}", "public",'' ), "{$rsvper['members_seo_name']}", "showuser" ) . "\" title=\"{$this->lang->words['view_profile']}\" class='ipsUserPhotoLink left'>
									<img src='{$rsvper['pp_small_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' />
								</a>
							
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>