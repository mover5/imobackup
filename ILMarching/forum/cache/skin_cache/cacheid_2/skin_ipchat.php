<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 2               */
/* CACHE FILE: Generated: Tue, 28 Jan 2014 06:36:01 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_ipchat_2 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['ajaxNewUser'] = array('isMember3','isMember4','formatnameajax','hasname','isMember3','isMember4','formatnameajax','hasname');
$this->_funcHooks['chatRoom'] = array('useprefix','usesuffix','formatname','forumidmap','isIgnoringChats','ignoredprivatechatters','badwordsloop','fixgroupname','useprefix','useprefix','grouploop','isMember','isMember2','formatname','hasname','ismoderatormenu','isprivmenu','isignoringuser','nokickself','isMember','cookiesound','hasignoredprivate','hasbadwords','notInPopup','soundon','notInPopup','useprefix','usesuffix','formatname','forumidmap','isIgnoringChats','ignoredprivatechatters','badwordsloop','fixgroupname','useprefix','useprefix','grouploop','isMember','isMember2','formatname','hasname','ismoderatormenu','isprivmenu','isignoringuser','nokickself','istm','istl','usefurl','isMember','hasignoredprivate','hasbadwords');
$this->_funcHooks['chatRules'] = array('showPopup','showPopup');
$this->_funcHooks['chatUnbanModcp'] = array('chatBanned');


}

/* -- ajaxNewUser --*/
function ajaxNewUser($data=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ipchat', $this->_funcHooks['ajaxNewUser'] ) )
{
$count_c23e0b3590d90939dc8be216cc5f8835 = is_array($this->functionData['ajaxNewUser']) ? count($this->functionData['ajaxNewUser']) : 0;
$this->functionData['ajaxNewUser'][$count_c23e0b3590d90939dc8be216cc5f8835]['data'] = $data;
}
$IPBHTML .= "<div class='chat-photo'>" . (($data['member']['member_id']) ? ("<a target='_blank' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$data['member']['member_id']}", "public",'' ), "{$data['member']['members_seo_name']}", "showuser" ) . "\" title='{$this->lang->words['view_profile']}' id='link_{$data['member']['member_id']}' class='ipsUserPhotoLink'>") : ("")) . "<img src='{$data['member']['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$data['member']['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_mini' />" . (($data['member']['member_id']) ? ("</a>") : ("")) . "</div>
	<span class='names'>" . (($data['member']['members_display_name']) ? ("<span title='{$data['member']['members_display_name']}'>" . (($this->settings['ipschat_format_names']) ? ("" . IPSMember::makeNameFormatted( IPSText::truncate( $data['member']['members_display_name'], 16 ), $data['member']['member_group_id'] ) . "") : ("" . IPSText::truncate( $data['member']['members_display_name'], 16 ) . "")) . "</span>") : ("{$data['user_name']}")) . "</span>";
return $IPBHTML;
}

/* -- chatMobileLink --*/
function chatMobileLink() {
$IPBHTML = "";
$IPBHTML .= "<li id='nav_chat'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=ipchat", "public",'' ), "false", "" ) . "' title='" . sprintf( $this->lang->words['go_to_prefix'], IPSLib::getAppTitle( 'ipchat' ) ) . "'><span class='icon'></span>" . IPSLib::getAppTitle( 'ipchat' ) . "</a></li>";
return $IPBHTML;
}

/* -- chatRoom --*/
function chatRoom($options=array(), $chatters=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ipchat', $this->_funcHooks['chatRoom'] ) )
{
$count_47c727f3c1cf8b3aa32a608be34dce68 = is_array($this->functionData['chatRoom']) ? count($this->functionData['chatRoom']) : 0;
$this->functionData['chatRoom'][$count_47c727f3c1cf8b3aa32a608be34dce68]['options'] = $options;
$this->functionData['chatRoom'][$count_47c727f3c1cf8b3aa32a608be34dce68]['chatters'] = $chatters;
}
$IPBHTML .= "<script type='text/javascript'>
//<![CDATA[
	jsDebug			= " . intval($this->settings['_jsDebug']) . "; /* Must come before JS includes */
	USE_RTE			= 1;
	DISABLE_AJAX	= parseInt({$this->settings['disable_text_ajax']}); /* Disables ajax requests where text is sent to the DB; helpful for charset issues */
	inACP			= false;
	var isRTL		= false;
	var rtlIe		= '';
	var rtlFull		= '';
//]]>
</script>
<script type='text/javascript' src='{$this->settings['js_base_url']}js/3rd_party/scriptaculous/scriptaculous-cache.js'></script>
<script type='text/javascript' src='{$this->settings['js_base_url']}js/ipb.js'></script>
<script type='text/javascript' src='{$this->settings['js_base_url']}js/ips.chat.js'></script>
<script type='text/javascript'>
	ipb.vars['base_url'] 			= '" . (($this->registry->output->isHTTPS) ? ("" . str_replace( 'http://', 'https://', "{$this->settings['js_base']}" ) . "") : ("{$this->settings['js_base']}")) . "';
	ipb.vars['board_url']			= '{$this->settings['board_url']}';
	ipb.vars['img_url'] 			= \"{$this->settings['img_url']}\";
	ipb.vars['member_id']			= parseInt( {$this->memberData['member_id']} );
	ipb.vars['is_supmod']			= parseInt( " . intval($this->memberData['g_is_supmod']) . " );
	ipb.vars['is_admin']			= parseInt( {$this->memberData['g_access_cp']} );
	ipb.vars['secure_hash'] 		= '{$this->member->form_hash}';
	ipb.vars['session_id']			= '{$this->member->session_id}';
	ipb.vars['is_touch']			= " . (($this->registry->output->isLargeTouchDevice()) ? ("'large';") : ("" . (($this->registry->output->isSmallTouchDevice()) ? ("'small';") : ("false;")) . "")) . "
	ipb.vars['member_group']		= " . json_encode( array( 'g_mem_info' => $this->memberData['g_mem_info'] ) ) . "
	ipb.vars['cookie_id'] 			= '{$this->settings['cookie_id']}';
	ipb.vars['cookie_domain'] 		= '{$this->settings['cookie_domain']}';
	ipb.vars['cookie_path']			= '{$this->settings['cookie_path']}';
	ipb.vars['charset']				= \"{$this->settings['gb_char_set']}\";
	ipb.vars['seo_enabled']			= " . intval($this->settings['use_friendly_urls']) . ";
	" . (($this->settings['use_friendly_urls']) ? ("
	ipb.vars['seo_params']			= " . json_encode($this->registry->getClass('output')->seoTemplates['__data__']) . ";
	") : ("")) . "
	Loader.boot();
		
	// Basic variables
	var roomId		= {$options['roomId']};
	var userId		= {$options['userId']};
	var userName	= '" . (($this->memberData['member_id']) ? ("{$this->memberData['members_display_name']}") : ("{$this->memberData['members_display_name']}_{$options['userId']}")) . "';
	var accessKey	= '{$options['accessKey']}';
	var serverHost	= '{$options['serverHost']}';
	var serverPath	= '{$options['serverPath']}';
	var ourUrl		= '{$options['ourUrl']}';
	var isMobile	= 1;
	// Chat settings	
	ipb.chat.condenseTime		= parseInt({$this->settings['ipchat_limit_time']});
	ipb.chat.maxMessages		= 50; // Force to 50 on mobile as we do not have a scrollable div... parseInt({$this->settings['ipchat_max_messages']});
	ipb.chat.moderator			= parseInt({$options['moderator']});
	ipb.chat.private			= parseInt({$options['private']});
	ipb.chat.hideEnterExit		= parseInt({$this->settings['ipchat_hide_usermessage']});
	ipb.chat.noBuffer			= parseInt('{$this->settings['ipchat_no_buffer']}');
	ipb.chat.inactiveKick		= parseInt('{$this->settings['ipchat_inactive_minutes']}');
	ipb.chat.user24hour 		= parseInt('{$this->settings['ipchat_24hour']}');
	
	// Set up templates
	ipb.chat.templates['msg-1']				= new Template( \"<li class='post chat-message #{ownclass}'>#{photo} <label>#{username}</label> <div>#{message}</div></li>\" );
	ipb.chat.templates['msg-1-compound']	= new Template( \"<li class='post chat-message #{ownclass}'><div class='hider'>&nbsp;</div><div>#{message}</div></li>\" );
	ipb.chat.templates['msg-2']				= new Template( \"<li class='post chat-notice'>#{photo} <label>#{username}</label> <div>#{action}</div></li>\" );
	ipb.chat.templates['msg-3']				= new Template( \"<li class='post chat-me'>#{photo} <label>#{username}</label> <div>**#{message}**</div></li>\" );
	ipb.chat.templates['msg-4']				= new Template( \"<li class='post chat-system'>{$this->lang->words['sys_message_pre']} #{message}</li>\" );
	ipb.chat.templates['msg-5']				= new Template( \"<li class='post chat-moderator'><label class='fluid'>#{username}</label> <div>{$this->lang->words['_kicked']} #{extra}</div></li>\" );
	ipb.chat.templates['msg-K']				= new Template( \"<li class='post chat-moderator'><div>{$this->lang->words['youve_been_kicked']}</div></li>\" );
	ipb.chat.templates['send_private']		= new Template( \"<div id='priv_#{id}_wrap'><h3 class='bar'>{$this->lang->words['sendprivatechat']}</h3><div class='chat-private-message'><textarea name='message_content' id='priv_chat_text_#{id}' cols='15' rows='2'></textarea> <input type='submit' value='{$this->lang->words['sendprivatebutton']}' id='#{id}_submit' onclick='return ipb.chat.sendPrivateChat( #{id} );' /></div></div>\" );
	ipb.chat.templates['new-tab']			= new Template( \"<a href='#tab-#{id}' rel='#{id}'>#{name}&nbsp;&nbsp;&nbsp;<img src='{$this->settings['img_url']}/chat/cross.png' alt='x' class='right' id='close-chat-tab-#{id}' /></a>\" );
	ipb.chat.templates['count-title']		= new Template( \"" . str_replace( '%s', '#{count}', $this->lang->words['chattab_count'] ) . "\" );
	
	// Set some language vars
	ipb.lang['time_am']				= \"{$this->lang->words['time_am']}\";
	ipb.lang['time_pm']				= \"{$this->lang->words['time_pm']}\";
	ipb.lang['entered_room']		= \" {$this->lang->words['entered_room']}\";
	ipb.lang['left_room']			= \" {$this->lang->words['left_room']}\";
	ipb.lang['chat_kick_user']		= \"{$this->lang->words['mobile_kick']}\";
	ipb.lang['chat_ban_user']		= \"{$this->lang->words['mobile_ban']}\";
	ipb.lang['chat_priv_user']		= \"{$this->lang->words['mobile_start_private']}\";
	ipb.lang['cant_kick_self']		= \"{$this->lang->words['cant_kick_self']}\";
	ipb.lang['youve_been_kicked']	= \"{$this->lang->words['youve_been_kicked']}\";
	ipb.lang['block_priv_user']		= \"{$this->lang->words['mobile_ignore_private']}\";
	ipb.lang['unblock_priv_user']	= \"{$this->lang->words['mobile_unignore_private']}\";
	ipb.lang['cant_block_user']		= \"{$this->lang->words['cant_block_user']}\";
	ipb.lang['noprivate_withignored'] = \"{$this->lang->words['noprivate_withignored']}\";
	ipb.lang['ban_user_confirm']	= \"{$this->lang->words['banconfirmpopup']}\";
	ipb.lang['leave_room']			= \"{$this->lang->words['leave_room']}\";
	ipb.chat.emoticons			= \$H({ " . IPSLib::fetchEmoticonsAsJson( $this->registry->output->skin['set_emo_dir'], true ) . " });
	ipb.vars['emoticon_url']	= \"{$this->settings['emoticons_url']}\";
	ipb.vars['img_url']			= '{$this->settings['img_url']}';
	
	// Sound
	ipb.chat.soundEnabled		= 0;
	ipb.chat.soundOnImg			= \"{$this->settings['img_url']}/bell.png\";
	ipb.chat.soundOffImg		= \"{$this->settings['img_url']}/bell_off.png\";
	
	// Chatters name formatting
	".$this->__f__6a2148f8aea32d563dba4cfc2ea26117($options,$chatters)."	// Ignore private chats from..
	".$this->__f__c7d9b312d0083505b0381de125b07ff9($options,$chatters)."	" . ((isset( $this->memberData['_ignoredUsers'] ) AND count( $this->memberData['_ignoredUsers'] )) ? ("
		".$this->__f__51c00e34f1dc2fc9c9540e657061101e($options,$chatters)."	") : ("")) . "
	
	// Badwords
	" . ((is_array($this->caches['badwords']) AND count($this->caches['badwords'])) ? ("
		".$this->__f__7fe88bdf9bcba4c09df360ec9b8c97e8($options,$chatters)."	") : ("")) . "
	
	// Groups
	".$this->__f__bf96e7c865a7e947703577df5c0006b5($options,$chatters)."	
	document.observe(\"dom:loaded\", function() {
		$('chatters-online-toggle').observe( 'click', function(e) {
			Event.stop(e);
			
			$('chatters-online').toggle();
			
			if( ( navigator.userAgent.match(/iPhone OS 2/i) ) || ( navigator.userAgent.match(/iPhone OS 3/i) ) || ( navigator.userAgent.match(/iPhone OS 4/i) ) )
			{
				$('chat-form').setStyle( { top: (window.pageYOffset + window.innerHeight - 34) + 'px' } );
			}
			
			return false;
		});
	});
</script>
<h2>" . IPSLib::getAppTitle('ipchat') . "</h2>
<div class='clearfix'>
	<div>
		<div id='chat-room-list' style='display:none' class='master_list'>
			<h3 class='title'>{$this->lang->words['chats']}</h3>
			<div id='chat-tab-wrapper'>
				<ul id='chat-tab-holder'>
					<li class='active' id='tab-chatroom'><a href='#tab-chatroom' rel='chatroom'>{$this->lang->words['chat_tab_home']}</a></li>
				</ul>
			</div>
		</div>	
	</div>
	<div class='ipsBox_container ipsLayout_content'>
		<div id='scrollbar_container'>
			<div id='messages-display'><span id='initial_message'>{$this->lang->words['please_wait_chats']}</span></div>
		</div>
		<form id='chat-form' action='#' method='post'>
			<div id='editor_message'>
				<div id='message_wrap' class='editor'>
					<textarea name=\"message\" id=\"message_textarea\" rows=\"1\" cols=\"50\" tabindex=\"0\" maxlength=\"450\"></textarea>
				</div>
			</div>
			<input type='submit' id='chat-submit' class='input_submit' value='{$this->lang->words['chat_post_button']}' />
		</form>
	</div>
	<div class='master_list' id='chatters-online-wrap'>
		<h3 class='title' id='chatters-online-toggle'><span id='online-chat-count'>" . (($_count = count($chatters)) ? ("{$_count}") : ("0")) . "</span> {$this->lang->words['whos_chatting_ttl']}</h3>
		<ul id='chatters-online' style='display: none;'>
			".$this->__f__03348d49387c54d06860e9bca2537c8d($options,$chatters)."		</ul>
	</div>
</div>
			
<!--Iframes used for cross-domain \"AJAX\"-->
<div id='iframeContainer'>
<div id='storage_container_chatroom' class='storage-container'><ul id='storage_chatroom'></ul></div>
</div>";
return $IPBHTML;
}


function __f__6a2148f8aea32d563dba4cfc2ea26117($options=array(), $chatters=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $chatters as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		ipb.chat.nameFormatting.set( {$data['user_id']}, [ \"" . (($this->settings['ipschat_format_names']) ? ("{$data['member']['prefix']}") : ("")) . "\", \"" . (($this->settings['ipschat_format_names']) ? ("{$data['member']['suffix']}") : ("")) . "\", \"{$data['member']['members_display_name']}\", \"<img class='ipsUserPhoto ipsUserPhoto_mini' src='{$data['member']['pp_small_photo']}' />\" ] );
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__c7d9b312d0083505b0381de125b07ff9($options=array(), $chatters=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $chatters as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		ipb.chat.forumIdMap.set( {$data['user_id']}, [ parseInt(\"{$data['member']['member_id']}\"), parseInt(\"{$data['member']['_canBeIgnored']}\"), parseInt(\"{$data['member']['g_id']}\") ] );
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__51c00e34f1dc2fc9c9540e657061101e($options=array(), $chatters=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->memberData['_ignoredUsers'] as $_forumMemberId => $_types )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			" . (($_types['ignore_chats']) ? ("
				ipb.chat.ignoreChats.set( '{$_forumMemberId}', '{$_forumMemberId}' );
			") : ("")) . "
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__7fe88bdf9bcba4c09df360ec9b8c97e8($options=array(), $chatters=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->caches['badwords'] as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			ipb.chat.badwords.set( '{$data['type']}', [ {$data['m_exact']}, \"{$data['swop']}\" ] );
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__bf96e7c865a7e947703577df5c0006b5($options=array(), $chatters=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->caches['group_cache'] as $gdata )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		ipb.chat.groups.set( '{$gdata['g_id']}', [ \"" . (($this->settings['ipschat_format_names']) ? ("" . (($_temp = str_replace( '"', '__DBQ__', $gdata['prefix'] )) ? ("{$_temp}") : ("")) . "") : ("")) . "\", \"" . (($this->settings['ipschat_format_names']) ? ("" . (($_temp = str_replace( '"', '__DBQ__', $gdata['suffix'] )) ? ("{$_temp}") : ("")) . "") : ("")) . "\", parseInt(\"{$gdata['g_bypass_badwords']}\") ] );
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__03348d49387c54d06860e9bca2537c8d($options=array(), $chatters=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $chatters as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<li id='user_{$data['user_id']}'>
					<div class='chat-photo'>" . (($data['member']['member_id']) ? ("<a target='_blank' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$data['member']['member_id']}", "public",'' ), "{$data['member']['members_seo_name']}", "showuser" ) . "\" title='{$this->lang->words['view_profile']}' id='link_{$data['member']['member_id']}' class='ipsUserPhotoLink'>") : ("")) . "<img src='{$data['member']['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$data['member']['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_mini' />" . (($data['member']['member_id']) ? ("</a>") : ("")) . "</div>
					<span class='names'>" . (($data['member']['members_display_name']) ? ("<span title='{$data['member']['members_display_name']}'>" . (($this->settings['ipschat_format_names']) ? ("" . IPSMember::makeNameFormatted( IPSText::truncate( $data['member']['members_display_name'], 16 ), $data['member']['member_group_id'] ) . "") : ("" . IPSText::truncate( $data['member']['members_display_name'], 16 ) . "")) . "</span>") : ("{$data['user_name']}")) . "</span>
					
					<ul class='kickmenu' id='mod_link_{$data['user_id']}_menucontent'>
						" . (($data['user_id'] != $options['userId']) ? ("" . (($options['moderator']) ? ("
								<li><a href='#' title='{$this->lang->words['chat_kick_user']}' class='kick_user' id='kick_user_{$data['user_id']}'>{$this->lang->words['mobile_kick']}</a></li>
								<li><a href='#' title='{$this->lang->words['chat_ban_user']}' class='ban_user' id='ban_user_{$data['user_id']}_{$data['member']['member_id']}'>{$this->lang->words['mobile_ban']}</a></li>
							") : ("")) . "
							" . (($options['private']) ? ("
								<li><a href='#' title='{$this->lang->words['mobile_start_private']}' class='priv_user' id='priv_user_{$data['user_id']}_{$data['member']['member_id']}'>{$this->lang->words['mobile_start_private']}</a></li>
							") : ("")) . "
							" . ((($data['member']['member_id'] AND isset( $this->memberData['_ignoredUsers'][ $data['member']['member_id'] ] ) AND $this->memberData['_ignoredUsers'][ $data['member']['member_id'] ]['ignore_chats']) OR (!$data['member']['member_id'] AND $this->memberData['_ignoredUsers'][ 'g_' . $data['user_id'] ]['ignore_chats'])) ? ("
								<li><a href='#' title='{$this->lang->words['mobile_unignore_private']}' class='unblock_user' id='block_user_{$data['user_id']}_{$data['member']['member_id']}'>{$this->lang->words['mobile_unignore_private']}</a></li>
							") : ("
								<li><a href='#' title='{$this->lang->words['mobile_ignore_private']}' class='block_user' id='block_user_{$data['user_id']}_{$data['member']['member_id']}'>{$this->lang->words['mobile_ignore_private']}</a></li>
							")) . "") : ("<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=ipschat&amp;section=chat&amp;do=leave&amp;room={$options['roomId']}&amp;user={$options['userId']}&amp;access_key={$options['accessKey']}&amp;secure_key={$this->member->form_hash}" . (($this->request['_popup']) ? ("&amp;popup=1") : ("")) . "", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['leave_room']}' id='leave_room'>{$this->lang->words['leave_room']}</a></li>")) . "
					</ul>
				</li>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- chatRules --*/
function chatRules($rules) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ipchat', $this->_funcHooks['chatRules'] ) )
{
$count_987b00b02bc3b64dbb201f43fdc8d5cb = is_array($this->functionData['chatRules']) ? count($this->functionData['chatRules']) : 0;
$this->functionData['chatRules'][$count_987b00b02bc3b64dbb201f43fdc8d5cb]['rules'] = $rules;
}
$IPBHTML .= "<h2>{$this->lang->words['chat_rules_title']}</h2>
<form action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=ipchat", "public",'' ), "false", "app=ipchat" ) . "' method='post'>
	<input type='hidden' name='agree' value='1' />
	" . (($this->request['_popup']) ? ("
		<input type='hidden' name='_popup' value='1' />
	") : ("")) . "	
	<div>
		<div class='padding progress_bar'>
			{$rules}
		</div>
		<fieldset class='submit'>
			<input type='submit' value='{$this->lang->words['chat_agree_button']}' class='submit' />
		</fieldset>
	</div>
</form>";
return $IPBHTML;
}

/* -- chatUnbanModcp --*/
function chatUnbanModcp($member) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ipchat', $this->_funcHooks['chatUnbanModcp'] ) )
{
$count_1e14a8803f38c81d49f85b11ffb8eb5f = is_array($this->functionData['chatUnbanModcp']) ? count($this->functionData['chatUnbanModcp']) : 0;
$this->functionData['chatUnbanModcp'][$count_1e14a8803f38c81d49f85b11ffb8eb5f]['member'] = $member;
}
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- newWindow --*/
function newWindow() {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- tabCount --*/
function tabCount($count) {
$IPBHTML = "";
$IPBHTML .= "" . (((!$this->settings['ipchat_htc_view'] OR IPS_APP_COMPONENT != 'ipchat') AND (!$this->settings['ipchat_htc_zero'] OR $count > 0)) ? ("
<div id='chat-tab-count-wrap'><span id='chat-tab-count' class='ipsHasNotifications' title='" . sprintf( $this->lang->words['chattab_count'], $count ) . "' style='display:none;'>{$count}</span></div>
<script type='text/javascript'>
// And then move
document.observe(\"dom:loaded\", function(){
	var _thisHtml	= $('nav_chat').down('a').innerHTML;
	_thisHtml = _thisHtml + $('chat-tab-count-wrap').innerHTML;
	$('nav_chat').down('a').update( _thisHtml );
	$('chat-tab-count-wrap').remove();
	$('chat-tab-count').show();
});
</script>
") : ("")) . "";
return $IPBHTML;
}

/* -- whoschatting_empty --*/
function whoschatting_empty() {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- whoschatting_show --*/
function whoschatting_show($total="",$names="") {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>